{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chuyen nganh\\\\\\u0110\\u1ED3 \\xE1n ATTT\\\\KumoChat\\\\frontend\\\\src\\\\context\\\\SocketContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useEffect, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SocketContext = /*#__PURE__*/createContext();\nexport const SocketProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const socketRef = useRef(null);\n  const [socketInstance, setSocketInstance] = useState(null); // ✅ lưu đúng socket để context dùng\n\n  useEffect(() => {\n    if (user && !socketRef.current) {\n      const socket = io(process.env.REACT_APP_SOCKET_URL);\n      socketRef.current = socket;\n      setSocketInstance(socket);\n      socket.emit(\"join\", {\n        userId: user.userId,\n        departmentIds: user.departmentIds ? [user.departmentIds] : []\n      });\n\n      // 👇 Lắng nghe khi tab chuẩn bị tắt để disconnect socket\n      const handleBeforeUnload = () => {\n        if (socketRef.current) {\n          socketRef.current.disconnect();\n        }\n      };\n      localStorage.removeItem(\"token\");\n      window.addEventListener(\"beforeunload\", handleBeforeUnload);\n      return () => {\n        if (socketRef.current) {\n          socketRef.current.disconnect();\n          socketRef.current = null;\n          setSocketInstance(null);\n        }\n        window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n      };\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket: socketInstance\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(SocketProvider, \"LrJ8ne0cnyNPUUdRVWk7wNB4Zjw=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useRef","useState","io","AuthContext","jsxDEV","_jsxDEV","SocketContext","SocketProvider","children","_s","user","socketRef","socketInstance","setSocketInstance","current","socket","process","env","REACT_APP_SOCKET_URL","emit","userId","departmentIds","handleBeforeUnload","disconnect","localStorage","removeItem","window","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Chuyen nganh/Đồ án ATTT/KumoChat/frontend/src/context/SocketContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nexport const SocketContext = createContext();\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const socketRef = useRef(null);\r\n  const [socketInstance, setSocketInstance] = useState(null); // ✅ lưu đúng socket để context dùng\r\n\r\n  useEffect(() => {\r\n    if (user && !socketRef.current) {\r\n      const socket = io(process.env.REACT_APP_SOCKET_URL);\r\n      socketRef.current = socket;\r\n      setSocketInstance(socket);\r\n\r\n      socket.emit(\"join\", {\r\n        userId: user.userId,\r\n        departmentIds: user.departmentIds ? [user.departmentIds] : [],\r\n      });\r\n\r\n      // 👇 Lắng nghe khi tab chuẩn bị tắt để disconnect socket\r\n      const handleBeforeUnload = () => {\r\n        if (socketRef.current) {\r\n          socketRef.current.disconnect();\r\n        }\r\n      };\r\n\r\n      localStorage.removeItem(\"token\");\r\n\r\n      window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n      return () => {\r\n        if (socketRef.current) {\r\n          socketRef.current.disconnect();\r\n          socketRef.current = null;\r\n          setSocketInstance(null);\r\n        }\r\n        window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n      };\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket: socketInstance }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC9E,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,MAAMC,aAAa,gBAAGT,aAAa,CAAC,CAAC;AAE5C,OAAO,MAAMU,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM;IAAEC;EAAK,CAAC,GAAGZ,UAAU,CAACK,WAAW,CAAC;EACxC,MAAMQ,SAAS,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5DF,SAAS,CAAC,MAAM;IACd,IAAIW,IAAI,IAAI,CAACC,SAAS,CAACG,OAAO,EAAE;MAC9B,MAAMC,MAAM,GAAGb,EAAE,CAACc,OAAO,CAACC,GAAG,CAACC,oBAAoB,CAAC;MACnDP,SAAS,CAACG,OAAO,GAAGC,MAAM;MAC1BF,iBAAiB,CAACE,MAAM,CAAC;MAEzBA,MAAM,CAACI,IAAI,CAAC,MAAM,EAAE;QAClBC,MAAM,EAAEV,IAAI,CAACU,MAAM;QACnBC,aAAa,EAAEX,IAAI,CAACW,aAAa,GAAG,CAACX,IAAI,CAACW,aAAa,CAAC,GAAG;MAC7D,CAAC,CAAC;;MAEF;MACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;QAC/B,IAAIX,SAAS,CAACG,OAAO,EAAE;UACrBH,SAAS,CAACG,OAAO,CAACS,UAAU,CAAC,CAAC;QAChC;MACF,CAAC;MAEDC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAEhCC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEL,kBAAkB,CAAC;MAE3D,OAAO,MAAM;QACX,IAAIX,SAAS,CAACG,OAAO,EAAE;UACrBH,SAAS,CAACG,OAAO,CAACS,UAAU,CAAC,CAAC;UAC9BZ,SAAS,CAACG,OAAO,GAAG,IAAI;UACxBD,iBAAiB,CAAC,IAAI,CAAC;QACzB;QACAa,MAAM,CAACE,mBAAmB,CAAC,cAAc,EAAEN,kBAAkB,CAAC;MAChE,CAAC;IACH;EACF,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAACC,aAAa,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEf,MAAM,EAAEH;IAAe,CAAE;IAAAJ,QAAA,EACvDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACzB,EAAA,CA3CWF,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}