{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chuyen nganh\\\\\\u0110\\u1ED3 \\xE1n ATTT\\\\KumoChat\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageArea.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { Box, TextField, IconButton, Typography, List, ListItem, ListItemText, Button, Avatar, Stack } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { SocketContext } from \"../../context/SocketContext\";\nimport { encryptMessage } from \"../../utils/encryption\";\nimport { decryptPrivateKey, decryptAESKey, decryptContentAES } from \"../../utils/decryption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageArea({\n  mode,\n  target,\n  userList = []\n}) {\n  _s();\n  const {\n    token,\n    user\n  } = useContext(AuthContext);\n  const {\n    socket\n  } = useContext(SocketContext);\n  const [messages, setMessages] = useState([]);\n  const [decryptedMessages, setDecryptedMessages] = useState([]);\n  const [content, setContent] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [privateKey, setPrivateKey] = useState(null);\n  const [onlineUserIds, setOnlineUserIds] = useState([]);\n\n  // Lắng nghe socket realtime\n  useEffect(() => {\n    if (!socket) return;\n    const handler = msg => {\n      if (mode === \"private\" && (msg.senderId === target.id || msg.receiverId === target.id)) {\n        setMessages(prev => [...prev, msg]);\n      }\n    };\n    const eventName = mode === \"private\" ? \"private_message\" : \"group_message\";\n    socket.on(eventName, handler);\n    socket.on(\"update_online_users\", ids => setOnlineUserIds(ids));\n    return () => {\n      socket.off(eventName, handler);\n      socket.off(\"update_online_users\");\n    };\n  }, [socket, mode, target]);\n\n  // Gửi tin nhắn\n  const handleSend = async () => {\n    if (!content.trim()) return;\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/public/${target.id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const {\n        encryptedContent,\n        encryptedAESKey\n      } = encryptMessage(content, res.data.publicKey);\n      await axios.post(`${process.env.REACT_APP_API_URL}/messages/private`, {\n        receiverId: target.id,\n        encryptedContent,\n        encryptedAESKey\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(prev => [...prev, {\n        senderId: user.userId,\n        encryptedContent,\n        encryptedAESKey,\n        decryptedContent: content\n      }]);\n      setContent(\"\");\n    } catch (err) {\n      console.error(\"❌ Lỗi gửi tin:\", err);\n    }\n  };\n\n  // Giải mã khi có tin nhắn mới\n  useEffect(() => {\n    const decryptAll = async () => {\n      if (!privateKey) return;\n      const decrypted = await Promise.all(messages.map(msg => {\n        if (msg.decryptedContent) return msg;\n        try {\n          const aesKey = msg.encryptedAESKey ? decryptAESKey(msg.encryptedAESKey, privateKey) : null;\n          const content = aesKey ? decryptContentAES(msg.encryptedContent, aesKey) : msg.encryptedContent;\n          return {\n            ...msg,\n            decryptedContent: content\n          };\n        } catch {\n          return {\n            ...msg,\n            decryptedContent: \"❌ Không giải mã được\"\n          };\n        }\n      }));\n      setDecryptedMessages(decrypted);\n    };\n    decryptAll();\n  }, [messages, privateKey]);\n  const handleLoadPrivateKey = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/my`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const decrypted = decryptPrivateKey(res.data.encryptedPrivateKey, password);\n      if (!decrypted) {\n        alert(\"❌ Sai mật khẩu hoặc khóa không hợp lệ\");\n      } else {\n        setPrivateKey(decrypted);\n        alert(\"🔓 Đã giải mã private key thành công!\");\n      }\n    } catch (err) {\n      console.error(\"❌ Lỗi tải khóa:\", err);\n    }\n  };\n  const getUsername = id => {\n    var _userList$find;\n    if (id === user.userId) return \"Bạn\";\n    return ((_userList$find = userList.find(u => u.id === id)) === null || _userList$find === void 0 ? void 0 : _userList$find.username) || id;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      mb: 1,\n      children: \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"column\",\n      spacing: 1,\n      mb: 2,\n      children: userList.map(u => /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          children: u.username[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: u.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: onlineUserIds.includes(u.id) ? \"green\" : \"gray\",\n          children: onlineUserIds.includes(u.id) ? \"🟢 Online\" : \"⚪️ Offline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, u.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), !privateKey && /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"\\uD83D\\uDD10 Nh\\u1EADp m\\u1EADt kh\\u1EA9u \\u0111\\u1EC3 gi\\u1EA3i RSA key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 1,\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          size: \"small\",\n          placeholder: \"M\\u1EADt kh\\u1EA9u\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleLoadPrivateKey,\n          children: \"Gi\\u1EA3i m\\xE3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      sx: {\n        maxHeight: 300,\n        overflow: \"auto\",\n        bgcolor: \"#f0f0f0\",\n        mb: 2\n      },\n      children: decryptedMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: getUsername(msg.senderId),\n          secondary: msg.decryptedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleSend,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageArea, \"ReIf+ee/4f2eXWk5+/BWfDC0vvE=\");\n_c = MessageArea;\nvar _c;\n$RefreshReg$(_c, \"MessageArea\");","map":{"version":3,"names":["useEffect","useState","useContext","Box","TextField","IconButton","Typography","List","ListItem","ListItemText","Button","Avatar","Stack","SendIcon","axios","AuthContext","SocketContext","encryptMessage","decryptPrivateKey","decryptAESKey","decryptContentAES","jsxDEV","_jsxDEV","MessageArea","mode","target","userList","_s","token","user","socket","messages","setMessages","decryptedMessages","setDecryptedMessages","content","setContent","password","setPassword","privateKey","setPrivateKey","onlineUserIds","setOnlineUserIds","handler","msg","senderId","id","receiverId","prev","eventName","on","ids","off","handleSend","trim","res","get","process","env","REACT_APP_API_URL","headers","Authorization","encryptedContent","encryptedAESKey","data","publicKey","post","userId","decryptedContent","err","console","error","decryptAll","decrypted","Promise","all","map","aesKey","handleLoadPrivateKey","encryptedPrivateKey","alert","getUsername","_userList$find","find","u","username","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","direction","spacing","display","alignItems","gap","color","includes","mt","type","size","placeholder","value","onChange","e","onClick","dense","sx","maxHeight","overflow","bgcolor","i","primary","secondary","fullWidth","_c","$RefreshReg$"],"sources":["D:/Chuyen nganh/Đồ án ATTT/KumoChat/frontend/src/components/chat/MessageArea.jsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Button,\r\n  Avatar,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\nimport { encryptMessage } from \"../../utils/encryption\";\r\nimport {\r\n  decryptPrivateKey,\r\n  decryptAESKey,\r\n  decryptContentAES,\r\n} from \"../../utils/decryption\";\r\n\r\nexport default function MessageArea({ mode, target, userList = [] }) {\r\n  const { token, user } = useContext(AuthContext);\r\n  const { socket } = useContext(SocketContext);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [decryptedMessages, setDecryptedMessages] = useState([]);\r\n  const [content, setContent] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [privateKey, setPrivateKey] = useState(null);\r\n  const [onlineUserIds, setOnlineUserIds] = useState([]);\r\n\r\n  // Lắng nghe socket realtime\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const handler = (msg) => {\r\n      if (\r\n        mode === \"private\" &&\r\n        (msg.senderId === target.id || msg.receiverId === target.id)\r\n      ) {\r\n        setMessages((prev) => [...prev, msg]);\r\n      }\r\n    };\r\n\r\n    const eventName = mode === \"private\" ? \"private_message\" : \"group_message\";\r\n    socket.on(eventName, handler);\r\n    socket.on(\"update_online_users\", (ids) => setOnlineUserIds(ids));\r\n\r\n    return () => {\r\n      socket.off(eventName, handler);\r\n      socket.off(\"update_online_users\");\r\n    };\r\n  }, [socket, mode, target]);\r\n\r\n  // Gửi tin nhắn\r\n  const handleSend = async () => {\r\n    if (!content.trim()) return;\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/keys/public/${target.id}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      const { encryptedContent, encryptedAESKey } = encryptMessage(\r\n        content,\r\n        res.data.publicKey\r\n      );\r\n\r\n      await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/messages/private`,\r\n        {\r\n          receiverId: target.id,\r\n          encryptedContent,\r\n          encryptedAESKey,\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        {\r\n          senderId: user.userId,\r\n          encryptedContent,\r\n          encryptedAESKey,\r\n          decryptedContent: content,\r\n        },\r\n      ]);\r\n\r\n      setContent(\"\");\r\n    } catch (err) {\r\n      console.error(\"❌ Lỗi gửi tin:\", err);\r\n    }\r\n  };\r\n\r\n  // Giải mã khi có tin nhắn mới\r\n  useEffect(() => {\r\n    const decryptAll = async () => {\r\n      if (!privateKey) return;\r\n\r\n      const decrypted = await Promise.all(\r\n        messages.map((msg) => {\r\n          if (msg.decryptedContent) return msg;\r\n\r\n          try {\r\n            const aesKey = msg.encryptedAESKey\r\n              ? decryptAESKey(msg.encryptedAESKey, privateKey)\r\n              : null;\r\n            const content = aesKey\r\n              ? decryptContentAES(msg.encryptedContent, aesKey)\r\n              : msg.encryptedContent;\r\n            return { ...msg, decryptedContent: content };\r\n          } catch {\r\n            return { ...msg, decryptedContent: \"❌ Không giải mã được\" };\r\n          }\r\n        })\r\n      );\r\n\r\n      setDecryptedMessages(decrypted);\r\n    };\r\n\r\n    decryptAll();\r\n  }, [messages, privateKey]);\r\n\r\n  const handleLoadPrivateKey = async () => {\r\n    try {\r\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/my`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const decrypted = decryptPrivateKey(\r\n        res.data.encryptedPrivateKey,\r\n        password\r\n      );\r\n      if (!decrypted) {\r\n        alert(\"❌ Sai mật khẩu hoặc khóa không hợp lệ\");\r\n      } else {\r\n        setPrivateKey(decrypted);\r\n        alert(\"🔓 Đã giải mã private key thành công!\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"❌ Lỗi tải khóa:\", err);\r\n    }\r\n  };\r\n\r\n  const getUsername = (id) => {\r\n    if (id === user.userId) return \"Bạn\";\r\n    return userList.find((u) => u.id === id)?.username || id;\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {/* Online user list */}\r\n      <Typography variant=\"h6\" mb={1}>Danh sách người dùng</Typography>\r\n      <Stack direction=\"column\" spacing={1} mb={2}>\r\n        {userList.map((u) => (\r\n          <Box key={u.id} display=\"flex\" alignItems=\"center\" gap={1}>\r\n            <Avatar>{u.username[0]}</Avatar>\r\n            <Typography>{u.username}</Typography>\r\n            <Typography variant=\"caption\" color={onlineUserIds.includes(u.id) ? \"green\" : \"gray\"}>\r\n              {onlineUserIds.includes(u.id) ? \"🟢 Online\" : \"⚪️ Offline\"}\r\n            </Typography>\r\n          </Box>\r\n        ))}\r\n      </Stack>\r\n\r\n      {/* Form nhập mật khẩu giải RSA */}\r\n      {!privateKey && (\r\n        <Box mb={2}>\r\n          <Typography variant=\"body2\">🔐 Nhập mật khẩu để giải RSA key:</Typography>\r\n          <Box display=\"flex\" gap={1} mt={1}>\r\n            <TextField\r\n              type=\"password\"\r\n              size=\"small\"\r\n              placeholder=\"Mật khẩu\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button variant=\"outlined\" onClick={handleLoadPrivateKey}>\r\n              Giải mã\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Danh sách tin nhắn */}\r\n      <List dense sx={{ maxHeight: 300, overflow: \"auto\", bgcolor: \"#f0f0f0\", mb: 2 }}>\r\n        {decryptedMessages.map((msg, i) => (\r\n          <ListItem key={i}>\r\n            <ListItemText\r\n              primary={getUsername(msg.senderId)}\r\n              secondary={msg.decryptedContent}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      {/* Nhập và gửi tin */}\r\n      <Box display=\"flex\" gap={1}>\r\n        <TextField\r\n          fullWidth\r\n          placeholder=\"Nhập tin nhắn...\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <IconButton onClick={handleSend} color=\"primary\">\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}