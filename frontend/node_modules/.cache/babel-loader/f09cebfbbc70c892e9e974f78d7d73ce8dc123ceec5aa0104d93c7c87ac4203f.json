{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chuyen nganh\\\\\\u0110\\u1ED3 \\xE1n ATTT\\\\KumoChat\\\\frontend\\\\src\\\\components\\\\chat\\\\GroupChat.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\nimport { Box, Typography, CircularProgress, FormControl, InputLabel, Select, MenuItem, TextField, IconButton, Button, List, ListItem, ListItemText } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { SocketContext } from \"../../context/SocketContext\";\nimport { decryptPrivateKey, decryptGroupKey, decryptGroupMessage } from \"../../utils/decryption\";\nimport { encryptGroupMessage } from \"../../utils/encryption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GroupChatAdmin() {\n  _s();\n  const {\n    token,\n    user\n  } = useContext(AuthContext);\n  const {\n    socket\n  } = useContext(SocketContext);\n  const [departments, setDepartments] = useState([]);\n  const [selectedDeptId, setSelectedDeptId] = useState(\"\");\n  const [groupKey, setGroupKey] = useState(null);\n  const [privateKey, setPrivateKey] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [content, setContent] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/departments/${user.userId}/departments`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setDepartments(res.data);\n      } catch (err) {\n        console.error(\"❌ Lỗi lấy danh sách phòng ban:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDepartments();\n  }, [user.Id, token]);\n\n  // Realtime nhận tin nhắn\n  useEffect(() => {\n    if (!socket) return;\n    const handler = msg => {\n      if (msg.departmentId === selectedDeptId) {\n        try {\n          const plaintext = decryptGroupMessage(msg.encryptedContent, groupKey);\n          setMessages(prev => [...prev, {\n            ...msg,\n            decryptedContent: plaintext\n          }]);\n        } catch {\n          setMessages(prev => [...prev, {\n            ...msg,\n            decryptedContent: \"❌ Không giải mã được\"\n          }]);\n        }\n      }\n    };\n    socket.on(\"group_message\", handler);\n    return () => socket.off(\"group_message\", handler);\n  }, [socket, selectedDeptId, groupKey]);\n  const handleLoadPrivateKey = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/my`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const decrypted = decryptPrivateKey(res.data.encryptedPrivateKey, password);\n      if (!decrypted) alert(\"❌ Sai mật khẩu hoặc khóa không hợp lệ\");else {\n        setPrivateKey(decrypted);\n        alert(\"🔓 Đã giải mã khóa riêng thành công!\");\n      }\n    } catch (err) {\n      console.error(\"❌ Lỗi tải khóa:\", err);\n    }\n  };\n\n  // Lấy groupKey và tin nhắn sau khi đã có privateKey\n  useEffect(() => {\n    const fetchGroupKeyAndMessages = async () => {\n      if (!selectedDeptId || !privateKey) return;\n      try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/group/${selectedDeptId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const rawKey = decryptGroupKey(res.data.encryptedGroupKey, privateKey);\n        if (!rawKey) return;\n        setGroupKey(rawKey);\n        const msgRes = await axios.get(`${process.env.REACT_APP_API_URL}/messages/group/${selectedDeptId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const decrypted = msgRes.data.map(msg => {\n          try {\n            const plain = decryptGroupMessage(msg.encryptedContent, rawKey);\n            return {\n              ...msg,\n              decryptedContent: plain\n            };\n          } catch {\n            return {\n              ...msg,\n              decryptedContent: \"❌ Không giải mã được\"\n            };\n          }\n        });\n        setMessages(decrypted);\n      } catch (err) {\n        console.error(\"❌ Lỗi lấy group key hoặc tin nhắn:\", err);\n      }\n    };\n    fetchGroupKeyAndMessages();\n  }, [selectedDeptId, privateKey, token]);\n  const handleSend = async () => {\n    if (!content.trim() || !groupKey || !selectedDeptId) return;\n    try {\n      const {\n        encryptedContent\n      } = encryptGroupMessage(content, groupKey);\n      await axios.post(`${process.env.REACT_APP_API_URL}/messages/group`, {\n        departmentId: selectedDeptId,\n        encryptedContent\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setContent(\"\");\n    } catch (err) {\n      console.error(\"❌ Gửi tin nhắn nhóm lỗi:\", err);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"\\uD83D\\uDC65 Nh\\u1EAFn trong nh\\xF3m ph\\xF2ng ban\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        my: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Ch\\u1ECDn ph\\xF2ng ban\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedDeptId,\n        onChange: e => setSelectedDeptId(e.target.value),\n        label: \"Ch\\u1ECDn ph\\xF2ng ban\",\n        children: departments.map(dep => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: dep.id,\n          children: dep.name\n        }, dep.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), !privateKey && /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"\\uD83D\\uDD10 Nh\\u1EADp m\\u1EADt kh\\u1EA9u \\u0111\\u1EC3 xem tin nh\\u1EAFn nh\\xF3m:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 1,\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          size: \"small\",\n          placeholder: \"M\\u1EADt kh\\u1EA9u\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleLoadPrivateKey,\n          children: \"Gi\\u1EA3i m\\xE3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      sx: {\n        maxHeight: 300,\n        overflow: \"auto\",\n        bgcolor: \"#f0f0f0\",\n        mb: 2\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: msg.senderId === user.userId ? \"Bạn\" : msg.senderName || msg.senderId,\n          secondary: msg.decryptedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleSend,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(GroupChatAdmin, \"xMk+AG2aPuxeoTV5YIjZpz9AOUI=\");\n_c = GroupChatAdmin;\nvar _c;\n$RefreshReg$(_c, \"GroupChatAdmin\");","map":{"version":3,"names":["useState","useEffect","useContext","Box","Typography","CircularProgress","FormControl","InputLabel","Select","MenuItem","TextField","IconButton","Button","List","ListItem","ListItemText","SendIcon","axios","AuthContext","SocketContext","decryptPrivateKey","decryptGroupKey","decryptGroupMessage","encryptGroupMessage","jsxDEV","_jsxDEV","GroupChatAdmin","_s","token","user","socket","departments","setDepartments","selectedDeptId","setSelectedDeptId","groupKey","setGroupKey","privateKey","setPrivateKey","password","setPassword","messages","setMessages","content","setContent","loading","setLoading","fetchDepartments","res","get","process","env","REACT_APP_API_URL","userId","headers","Authorization","data","err","console","error","Id","handler","msg","departmentId","plaintext","encryptedContent","prev","decryptedContent","on","off","handleLoadPrivateKey","decrypted","encryptedPrivateKey","alert","fetchGroupKeyAndMessages","rawKey","encryptedGroupKey","msgRes","map","plain","handleSend","trim","post","fileName","_jsxFileName","lineNumber","columnNumber","children","variant","fullWidth","sx","my","value","onChange","e","target","label","dep","id","name","mb","display","gap","mt","type","size","placeholder","onClick","dense","maxHeight","overflow","bgcolor","i","primary","senderId","senderName","secondary","color","_c","$RefreshReg$"],"sources":["D:/Chuyen nganh/Đồ án ATTT/KumoChat/frontend/src/components/chat/GroupChat.jsx"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Box, Typography, CircularProgress, FormControl, InputLabel,\r\n  Select, MenuItem, TextField, IconButton, Button, List, ListItem, ListItemText\r\n} from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\nimport { decryptPrivateKey, decryptGroupKey, decryptGroupMessage } from \"../../utils/decryption\";\r\nimport { encryptGroupMessage } from \"../../utils/encryption\";\r\n\r\nexport default function GroupChatAdmin() {\r\n  const { token, user } = useContext(AuthContext);\r\n  const { socket } = useContext(SocketContext);\r\n\r\n  const [departments, setDepartments] = useState([]);\r\n  const [selectedDeptId, setSelectedDeptId] = useState(\"\");\r\n  const [groupKey, setGroupKey] = useState(null);\r\n  const [privateKey, setPrivateKey] = useState(null);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [content, setContent] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/departments/${user.userId}/departments`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        setDepartments(res.data);\r\n      } catch (err) {\r\n        console.error(\"❌ Lỗi lấy danh sách phòng ban:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchDepartments();\r\n  }, [user.Id, token]);\r\n\r\n  // Realtime nhận tin nhắn\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const handler = (msg) => {\r\n      if (msg.departmentId === selectedDeptId) {\r\n        try {\r\n          const plaintext = decryptGroupMessage(msg.encryptedContent, groupKey);\r\n          setMessages((prev) => [...prev, { ...msg, decryptedContent: plaintext }]);\r\n        } catch {\r\n          setMessages((prev) => [...prev, { ...msg, decryptedContent: \"❌ Không giải mã được\" }]);\r\n        }\r\n      }\r\n    };\r\n\r\n    socket.on(\"group_message\", handler);\r\n    return () => socket.off(\"group_message\", handler);\r\n  }, [socket, selectedDeptId, groupKey]);\r\n\r\n  const handleLoadPrivateKey = async () => {\r\n    try {\r\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/my`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      const decrypted = decryptPrivateKey(res.data.encryptedPrivateKey, password);\r\n      if (!decrypted) alert(\"❌ Sai mật khẩu hoặc khóa không hợp lệ\");\r\n      else {\r\n        setPrivateKey(decrypted);\r\n        alert(\"🔓 Đã giải mã khóa riêng thành công!\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"❌ Lỗi tải khóa:\", err);\r\n    }\r\n  };\r\n\r\n  // Lấy groupKey và tin nhắn sau khi đã có privateKey\r\n  useEffect(() => {\r\n    const fetchGroupKeyAndMessages = async () => {\r\n      if (!selectedDeptId || !privateKey) return;\r\n\r\n      try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/group/${selectedDeptId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        const rawKey = decryptGroupKey(res.data.encryptedGroupKey, privateKey);\r\n        if (!rawKey) return;\r\n\r\n        setGroupKey(rawKey);\r\n\r\n        const msgRes = await axios.get(`${process.env.REACT_APP_API_URL}/messages/group/${selectedDeptId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        const decrypted = msgRes.data.map((msg) => {\r\n          try {\r\n            const plain = decryptGroupMessage(msg.encryptedContent, rawKey);\r\n            return { ...msg, decryptedContent: plain };\r\n          } catch {\r\n            return { ...msg, decryptedContent: \"❌ Không giải mã được\" };\r\n          }\r\n        });\r\n\r\n        setMessages(decrypted);\r\n      } catch (err) {\r\n        console.error(\"❌ Lỗi lấy group key hoặc tin nhắn:\", err);\r\n      }\r\n    };\r\n\r\n    fetchGroupKeyAndMessages();\r\n  }, [selectedDeptId, privateKey, token]);\r\n\r\n  const handleSend = async () => {\r\n    if (!content.trim() || !groupKey || !selectedDeptId) return;\r\n\r\n    try {\r\n      const { encryptedContent } = encryptGroupMessage(content, groupKey);\r\n\r\n      await axios.post(`${process.env.REACT_APP_API_URL}/messages/group`, {\r\n        departmentId: selectedDeptId,\r\n        encryptedContent\r\n      }, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      setContent(\"\");\r\n    } catch (err) {\r\n      console.error(\"❌ Gửi tin nhắn nhóm lỗi:\", err);\r\n    }\r\n  };\r\n\r\n  if (loading) return <CircularProgress />;\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\">👥 Nhắn trong nhóm phòng ban</Typography>\r\n\r\n      <FormControl fullWidth sx={{ my: 2 }}>\r\n        <InputLabel>Chọn phòng ban</InputLabel>\r\n        <Select\r\n          value={selectedDeptId}\r\n          onChange={(e) => setSelectedDeptId(e.target.value)}\r\n          label=\"Chọn phòng ban\"\r\n        >\r\n          {departments.map(dep => (\r\n            <MenuItem key={dep.id} value={dep.id}>{dep.name}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      {!privateKey && (\r\n        <Box mb={2}>\r\n          <Typography variant=\"body2\">🔐 Nhập mật khẩu để xem tin nhắn nhóm:</Typography>\r\n          <Box display=\"flex\" gap={1} mt={1}>\r\n            <TextField\r\n              type=\"password\"\r\n              size=\"small\"\r\n              placeholder=\"Mật khẩu\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button variant=\"outlined\" onClick={handleLoadPrivateKey}>\r\n              Giải mã\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      <List dense sx={{ maxHeight: 300, overflow: \"auto\", bgcolor: \"#f0f0f0\", mb: 2 }}>\r\n        {messages.map((msg, i) => (\r\n          <ListItem key={i}>\r\n            <ListItemText\r\n              primary={msg.senderId === user.userId ? \"Bạn\" : msg.senderName || msg.senderId}\r\n              secondary={msg.decryptedContent}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <Box display=\"flex\" gap={1}>\r\n        <TextField\r\n          fullWidth\r\n          placeholder=\"Nhập tin nhắn...\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <IconButton onClick={handleSend} color=\"primary\">\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}