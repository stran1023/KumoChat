{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chuyen nganh\\\\\\u0110\\u1ED3 \\xE1n ATTT\\\\KumoChat\\\\frontend\\\\src\\\\components\\\\chat\\\\BroadcastChatAdmin.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Box, Typography, List, ListItem, ListItemText, TextField, Button } from \"@mui/material\";\nimport { encryptMessage } from \"../../utils/encryption\";\nimport forge from \"node-forge\";\nimport CryptoJS from \"crypto-js\";\nimport { encryptAESKeyWithPublicKey } from \"../../utils/encryption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BroadcastChatAdmin() {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [messages, setMessages] = useState([]);\n  const [broadcastInput, setBroadcastInput] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [privateKey, setPrivateKey] = useState(null);\n  const sendBroadcast = async message => {\n    const adminUser = JSON.parse(localStorage.getItem(\"user\"));\n    const resUsers = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const allUsers = resUsers.data.filter(u => u.id !== adminUser.id);\n    const encryptedAESKeys = [];\n    let encryptedContent;\n    let rawAESKeyUsed;\n    for (const user of allUsers) {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users/${user.id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const publicKeyPem = res.data.publicKey;\n      const {\n        encryptedContent: encContent,\n        encryptedAESKey,\n        aesKeyRaw\n      } = encryptMessage(message, publicKeyPem, true);\n      if (!encryptedContent) {\n        encryptedContent = encContent;\n        rawAESKeyUsed = aesKeyRaw;\n      }\n      encryptedAESKeys.push({\n        userId: user.id,\n        aesKey: encryptedAESKey\n      });\n    }\n\n    // M√£ h√≥a AES key cho ch√≠nh admin\n    const adminKeyRes = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users/${adminUser.id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const adminPublicKey = adminKeyRes.data.publicKey;\n    const adminEncryptedAESKey = encryptAESKeyWithPublicKey(rawAESKeyUsed, adminPublicKey);\n    encryptedAESKeys.push({\n      userId: adminUser.id,\n      aesKey: adminEncryptedAESKey\n    });\n    await axios.post(`${process.env.REACT_APP_API_URL}/admin/broadcast`, {\n      encryptedContent,\n      encryptedAESKeys\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    alert(\"‚úÖ Tin nh·∫Øn broadcast ƒë√£ g·ª≠i ƒë·∫øn t·∫•t c·∫£ ng∆∞·ªùi d√πng!\");\n  };\n  const handleSend = async () => {\n    if (!broadcastInput.trim()) return;\n    await sendBroadcast(broadcastInput);\n    setBroadcastInput(\"\");\n    fetchBroadcasts(); // refresh sau khi g·ª≠i\n  };\n  const fetchBroadcasts = async () => {\n    if (!privateKey) return;\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/messages/broadcast`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const decryptedMsgs = res.data.map(msg => {\n      try {\n        var _msg$sender;\n        const aesKeyBytes = privateKey.decrypt(forge.util.decode64(msg.encryptedAESKey), \"RSA-OAEP\");\n        const decrypted = CryptoJS.AES.decrypt(msg.encryptedContent, aesKeyBytes);\n        const plaintext = decrypted.toString(CryptoJS.enc.Utf8);\n        return {\n          ...msg,\n          senderName: ((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.username) || \"admin\",\n          decryptedContent: plaintext || \"(Kh√¥ng th·ªÉ gi·∫£i m√£)\"\n        };\n      } catch (err) {\n        var _msg$sender2;\n        return {\n          ...msg,\n          senderName: ((_msg$sender2 = msg.sender) === null || _msg$sender2 === void 0 ? void 0 : _msg$sender2.username) || \"Kh√¥ng r√µ\",\n          decryptedContent: \"(L·ªói gi·∫£i m√£)\"\n        };\n      }\n    });\n    setMessages(decryptedMsgs);\n  };\n  useEffect(() => {\n    fetchBroadcasts();\n  }, [token, privateKey]);\n  const handleLoadPrivateKey = async () => {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/my`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const decrypted = decryptPrivateKey(res.data.encryptedPrivateKey, password);\n    if (!decrypted) {\n      alert(\"‚ùå Sai m·∫≠t kh·∫©u ho·∫∑c kh√≥a kh√¥ng h·ª£p l·ªá\");\n    } else {\n      setPrivateKey(forge.pki.privateKeyFromPem(decrypted));\n      alert(\"üîì ƒê√£ gi·∫£i m√£ private key th√†nh c√¥ng!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      fontWeight: 600,\n      gutterBottom: true,\n      children: \"\\uD83D\\uDCE2 G\\u1EEDi tin nh\\u1EAFn Broadcast (Admin)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), !privateKey && /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"\\uD83D\\uDD10 Nh\\u1EADp m\\u1EADt kh\\u1EA9u \\u0111\\u1EC3 gi\\u1EA3i RSA key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 1,\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          size: \"small\",\n          placeholder: \"M\\u1EADt kh\\u1EA9u\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleLoadPrivateKey,\n          children: \"Gi\\u1EA3i m\\xE3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      sx: {\n        maxHeight: 300,\n        overflow: \"auto\",\n        bgcolor: \"#f4f4f4\",\n        mb: 2\n      },\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `T·ª´: ${msg.senderName}`,\n          secondary: msg.decryptedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"So\\u1EA1n tin broadcast\",\n      value: broadcastInput,\n      onChange: e => setBroadcastInput(e.target.value),\n      multiline: true,\n      rows: 2,\n      sx: {\n        mb: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleSend,\n      children: \"G\\u1EEDi Broadcast \\uD83D\\uDCE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n// üîê H√†m gi·∫£i m√£ private key ƒë√£ m√£ h√≥a b·∫±ng m·∫≠t kh·∫©u\n_s(BroadcastChatAdmin, \"zTXXYoGMJ+Dx65IP3iNMfuFFCKc=\");\n_c = BroadcastChatAdmin;\nfunction decryptPrivateKey(encryptedPem, passphrase) {\n  try {\n    const privateKey = forge.pki.decryptRsaPrivateKey(encryptedPem, passphrase);\n    return privateKey ? forge.pki.privateKeyToPem(privateKey) : null;\n  } catch {\n    return null;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"BroadcastChatAdmin\");","map":{"version":3,"names":["useEffect","useState","useContext","axios","AuthContext","Box","Typography","List","ListItem","ListItemText","TextField","Button","encryptMessage","forge","CryptoJS","encryptAESKeyWithPublicKey","jsxDEV","_jsxDEV","BroadcastChatAdmin","_s","token","messages","setMessages","broadcastInput","setBroadcastInput","password","setPassword","privateKey","setPrivateKey","sendBroadcast","message","adminUser","JSON","parse","localStorage","getItem","resUsers","get","process","env","REACT_APP_API_URL","headers","Authorization","allUsers","data","filter","u","id","encryptedAESKeys","encryptedContent","rawAESKeyUsed","user","res","publicKeyPem","publicKey","encContent","encryptedAESKey","aesKeyRaw","push","userId","aesKey","adminKeyRes","adminPublicKey","adminEncryptedAESKey","post","alert","handleSend","trim","fetchBroadcasts","decryptedMsgs","map","msg","_msg$sender","aesKeyBytes","decrypt","util","decode64","decrypted","AES","plaintext","toString","enc","Utf8","senderName","sender","username","decryptedContent","err","_msg$sender2","handleLoadPrivateKey","decryptPrivateKey","encryptedPrivateKey","pki","privateKeyFromPem","children","variant","fontWeight","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","display","gap","mt","type","size","placeholder","value","onChange","e","target","onClick","dense","sx","maxHeight","overflow","bgcolor","primary","secondary","fullWidth","label","multiline","rows","_c","encryptedPem","passphrase","decryptRsaPrivateKey","privateKeyToPem","$RefreshReg$"],"sources":["D:/Chuyen nganh/ƒê·ªì √°n ATTT/KumoChat/frontend/src/components/chat/BroadcastChatAdmin.jsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { Box, Typography, List, ListItem, ListItemText, TextField, Button } from \"@mui/material\";\r\nimport { encryptMessage } from \"../../utils/encryption\";\r\nimport forge from \"node-forge\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport { encryptAESKeyWithPublicKey } from \"../../utils/encryption\";\r\n\r\nexport default function BroadcastChatAdmin() {\r\n  const { token } = useContext(AuthContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [broadcastInput, setBroadcastInput] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [privateKey, setPrivateKey] = useState(null);\r\n\r\n  const sendBroadcast = async (message) => {\r\n    const adminUser = JSON.parse(localStorage.getItem(\"user\"));\r\n    const resUsers = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    const allUsers = resUsers.data.filter(u => u.id !== adminUser.id);\r\n    const encryptedAESKeys = [];\r\n    let encryptedContent;\r\n    let rawAESKeyUsed;\r\n\r\n    for (const user of allUsers) {\r\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users/${user.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      const publicKeyPem = res.data.publicKey;\r\n\r\n      const { encryptedContent: encContent, encryptedAESKey, aesKeyRaw } = encryptMessage(message, publicKeyPem, true);\r\n      if (!encryptedContent) {\r\n        encryptedContent = encContent;\r\n        rawAESKeyUsed = aesKeyRaw;\r\n      }\r\n\r\n      encryptedAESKeys.push({ userId: user.id, aesKey: encryptedAESKey });\r\n    }\r\n\r\n    // M√£ h√≥a AES key cho ch√≠nh admin\r\n    const adminKeyRes = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users/${adminUser.id}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    const adminPublicKey = adminKeyRes.data.publicKey;\r\n    const adminEncryptedAESKey = encryptAESKeyWithPublicKey(rawAESKeyUsed, adminPublicKey);\r\n    encryptedAESKeys.push({ userId: adminUser.id, aesKey: adminEncryptedAESKey });\r\n\r\n    await axios.post(`${process.env.REACT_APP_API_URL}/admin/broadcast`, {\r\n      encryptedContent,\r\n      encryptedAESKeys\r\n    }, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    alert(\"‚úÖ Tin nh·∫Øn broadcast ƒë√£ g·ª≠i ƒë·∫øn t·∫•t c·∫£ ng∆∞·ªùi d√πng!\");\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!broadcastInput.trim()) return;\r\n    await sendBroadcast(broadcastInput);\r\n    setBroadcastInput(\"\");\r\n    fetchBroadcasts(); // refresh sau khi g·ª≠i\r\n  };\r\n\r\n  const fetchBroadcasts = async () => {\r\n    if (!privateKey) return;\r\n\r\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/messages/broadcast`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    const decryptedMsgs = res.data.map(msg => {\r\n      try {\r\n        const aesKeyBytes = privateKey.decrypt(forge.util.decode64(msg.encryptedAESKey), \"RSA-OAEP\");\r\n        const decrypted = CryptoJS.AES.decrypt(msg.encryptedContent, aesKeyBytes);\r\n        const plaintext = decrypted.toString(CryptoJS.enc.Utf8);\r\n\r\n        return {\r\n          ...msg,\r\n          senderName: msg.sender?.username || \"admin\",\r\n          decryptedContent: plaintext || \"(Kh√¥ng th·ªÉ gi·∫£i m√£)\"\r\n        };\r\n      } catch (err) {\r\n        return {\r\n          ...msg,\r\n          senderName: msg.sender?.username || \"Kh√¥ng r√µ\",\r\n          decryptedContent: \"(L·ªói gi·∫£i m√£)\"\r\n        };\r\n      }\r\n    });\r\n\r\n    setMessages(decryptedMsgs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBroadcasts();\r\n  }, [token, privateKey]);\r\n\r\n  const handleLoadPrivateKey = async () => {\r\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/my`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    const decrypted = decryptPrivateKey(res.data.encryptedPrivateKey, password);\r\n    if (!decrypted) {\r\n      alert(\"‚ùå Sai m·∫≠t kh·∫©u ho·∫∑c kh√≥a kh√¥ng h·ª£p l·ªá\");\r\n    } else {\r\n      setPrivateKey(forge.pki.privateKeyFromPem(decrypted));\r\n      alert(\"üîì ƒê√£ gi·∫£i m√£ private key th√†nh c√¥ng!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" fontWeight={600} gutterBottom>\r\n        üì¢ G·ª≠i tin nh·∫Øn Broadcast (Admin)\r\n      </Typography>\r\n\r\n      {!privateKey && (\r\n        <Box mb={2}>\r\n          <Typography variant=\"body2\">üîê Nh·∫≠p m·∫≠t kh·∫©u ƒë·ªÉ gi·∫£i RSA key:</Typography>\r\n          <Box display=\"flex\" gap={1} mt={1}>\r\n            <TextField\r\n              type=\"password\"\r\n              size=\"small\"\r\n              placeholder=\"M·∫≠t kh·∫©u\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button variant=\"outlined\" onClick={handleLoadPrivateKey}>\r\n              Gi·∫£i m√£\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      <List dense sx={{ maxHeight: 300, overflow: \"auto\", bgcolor: \"#f4f4f4\", mb: 2 }}>\r\n        {messages.map(msg => (\r\n          <ListItem key={msg.id}>\r\n            <ListItemText\r\n              primary={`T·ª´: ${msg.senderName}`}\r\n              secondary={msg.decryptedContent}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <TextField\r\n        fullWidth\r\n        label=\"So·∫°n tin broadcast\"\r\n        value={broadcastInput}\r\n        onChange={(e) => setBroadcastInput(e.target.value)}\r\n        multiline\r\n        rows={2}\r\n        sx={{ mb: 1 }}\r\n      />\r\n      <Button variant=\"contained\" onClick={handleSend}>\r\n        G·ª≠i Broadcast üì§\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// üîê H√†m gi·∫£i m√£ private key ƒë√£ m√£ h√≥a b·∫±ng m·∫≠t kh·∫©u\r\nfunction decryptPrivateKey(encryptedPem, passphrase) {\r\n  try {\r\n    const privateKey = forge.pki.decryptRsaPrivateKey(encryptedPem, passphrase);\r\n    return privateKey ? forge.pki.privateKeyToPem(privateKey) : null;\r\n  } catch {\r\n    return null;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}