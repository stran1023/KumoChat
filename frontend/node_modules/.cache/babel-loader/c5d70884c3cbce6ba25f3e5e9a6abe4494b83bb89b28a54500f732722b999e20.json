{"ast":null,"code":"import forge from \"node-forge\";\n\n// Sinh RSA keypair (2048-bit)\nexport function generateRSAKeyPair(password) {\n  return new Promise(resolve => {\n    forge.pki.rsa.generateKeyPair({\n      bits: 2048,\n      workers: -1\n    }, (err, keypair) => {\n      const publicKeyPem = forge.pki.publicKeyToPem(keypair.publicKey);\n\n      // Encrypt private key với mật khẩu\n      const privateKeyPem = forge.pki.encryptRsaPrivateKey(keypair.privateKey, password, {\n        algorithm: \"aes256\"\n      });\n      resolve({\n        publicKey: publicKeyPem,\n        encryptedPrivateKey: privateKeyPem\n      });\n    });\n  });\n}","map":{"version":3,"names":["forge","generateRSAKeyPair","password","Promise","resolve","pki","rsa","generateKeyPair","bits","workers","err","keypair","publicKeyPem","publicKeyToPem","publicKey","privateKeyPem","encryptRsaPrivateKey","privateKey","algorithm","encryptedPrivateKey"],"sources":["D:/Chuyen nganh/Đồ án ATTT/KumoChat/frontend/src/utils/crypto.js"],"sourcesContent":["import forge from \"node-forge\";\r\n\r\n// Sinh RSA keypair (2048-bit)\r\nexport function generateRSAKeyPair(password) {\r\n  return new Promise((resolve) => {\r\n    forge.pki.rsa.generateKeyPair({ bits: 2048, workers: -1 }, (err, keypair) => {\r\n      const publicKeyPem = forge.pki.publicKeyToPem(keypair.publicKey);\r\n\r\n      // Encrypt private key với mật khẩu\r\n      const privateKeyPem = forge.pki.encryptRsaPrivateKey(\r\n        keypair.privateKey,\r\n        password,\r\n        { algorithm: \"aes256\" }\r\n      );\r\n\r\n      resolve({ publicKey: publicKeyPem, encryptedPrivateKey: privateKeyPem });\r\n    });\r\n  });\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,YAAY;;AAE9B;AACA,OAAO,SAASC,kBAAkBA,CAACC,QAAQ,EAAE;EAC3C,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BJ,KAAK,CAACK,GAAG,CAACC,GAAG,CAACC,eAAe,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,OAAO,EAAE,CAAC;IAAE,CAAC,EAAE,CAACC,GAAG,EAAEC,OAAO,KAAK;MAC3E,MAAMC,YAAY,GAAGZ,KAAK,CAACK,GAAG,CAACQ,cAAc,CAACF,OAAO,CAACG,SAAS,CAAC;;MAEhE;MACA,MAAMC,aAAa,GAAGf,KAAK,CAACK,GAAG,CAACW,oBAAoB,CAClDL,OAAO,CAACM,UAAU,EAClBf,QAAQ,EACR;QAAEgB,SAAS,EAAE;MAAS,CACxB,CAAC;MAEDd,OAAO,CAAC;QAAEU,SAAS,EAAEF,YAAY;QAAEO,mBAAmB,EAAEJ;MAAc,CAAC,CAAC;IAC1E,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}