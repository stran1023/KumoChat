{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chuyen nganh\\\\\\u0110\\u1ED3 \\xE1n ATTT\\\\KumoChat\\\\frontend\\\\src\\\\components\\\\chat\\\\UploadFile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Button, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UploadFile({\n  onUploadSuccess\n}) {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setStatus(\"\");\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) return alert(\"‚ùó H√£y ch·ªçn file!\");\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      var _res$data;\n      setStatus(\"üïê ƒêang ki·ªÉm tra file...\");\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/files/upload`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if ((_res$data = res.data) !== null && _res$data !== void 0 && _res$data.fileUrl) {\n        setStatus(\"‚úÖ File s·∫°ch! ƒê√£ upload xong\");\n        onUploadSuccess(res.data.fileUrl);\n      } else {\n        setStatus(\"‚ö†Ô∏è Kh√¥ng c√≥ fileUrl ƒë∆∞·ª£c tr·∫£ v·ªÅ\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"‚ùå L·ªói upload:\", err);\n      const msg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"‚ùå Upload th·∫•t b·∫°i\";\n      setStatus(msg);\n      onUploadSuccess(null); // ho·∫∑c kh√¥ng g·ªçi g√¨ n·∫øu file nhi·ªÖm\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleUpload,\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        ml: 2\n      },\n      children: \"\\uD83D\\uDCE4 Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      sx: {\n        mt: 1,\n        color: \"#a14d52\"\n      },\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UploadFile, \"ncPNcAgjvKNZENDYnsNsnXSweUw=\");\n_c = UploadFile;\nvar _c;\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"names":["React","useState","useContext","axios","AuthContext","Button","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadFile","onUploadSuccess","_s","token","selectedFile","setSelectedFile","status","setStatus","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","_res$data","res","post","process","env","REACT_APP_API_URL","headers","Authorization","data","fileUrl","err","_err$response","_err$response$data","console","error","msg","response","message","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","color","sx","ml","mt","_c","$RefreshReg$"],"sources":["D:/Chuyen nganh/ƒê·ªì √°n ATTT/KumoChat/frontend/src/components/chat/UploadFile.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { Button, Typography } from \"@mui/material\";\r\n\r\nexport default function UploadFile({ onUploadSuccess }) {\r\n  const { token } = useContext(AuthContext);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n    setStatus(\"\");\r\n  };\r\n\r\n    const handleUpload = async () => {\r\n    if (!selectedFile) return alert(\"‚ùó H√£y ch·ªçn file!\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    try {\r\n        setStatus(\"üïê ƒêang ki·ªÉm tra file...\");\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/files/upload`, formData, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n        });\r\n\r\n        if (res.data?.fileUrl) {\r\n        setStatus(\"‚úÖ File s·∫°ch! ƒê√£ upload xong\");\r\n        onUploadSuccess(res.data.fileUrl);\r\n        } else {\r\n        setStatus(\"‚ö†Ô∏è Kh√¥ng c√≥ fileUrl ƒë∆∞·ª£c tr·∫£ v·ªÅ\");\r\n        }\r\n    } catch (err) {\r\n        console.error(\"‚ùå L·ªói upload:\", err);\r\n        const msg = err.response?.data?.message || \"‚ùå Upload th·∫•t b·∫°i\";\r\n        setStatus(msg);\r\n        onUploadSuccess(null); // ho·∫∑c kh√¥ng g·ªçi g√¨ n·∫øu file nhi·ªÖm\r\n    }\r\n    };\r\n\r\n  return (\r\n    <>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <Button onClick={handleUpload} variant=\"contained\" color=\"primary\" sx={{ ml: 2 }}>\r\n        üì§ Upload\r\n      </Button>\r\n      <Typography variant=\"body2\" sx={{ mt: 1, color: \"#a14d52\" }}>\r\n        {status}\r\n      </Typography>\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}