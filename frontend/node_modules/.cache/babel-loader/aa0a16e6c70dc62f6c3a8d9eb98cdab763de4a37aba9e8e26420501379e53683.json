{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chuyen nganh\\\\\\u0110\\u1ED3 \\xE1n ATTT\\\\KumoChat\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageArea.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { Box, TextField, IconButton, Typography, List, ListItem, ListItemText, Button } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { SocketContext } from \"../../context/SocketContext\";\nimport { encryptMessage } from \"../../utils/encryption\";\nimport { decryptPrivateKey, decryptAESKey, decryptContentAES } from \"../../utils/decryption\";\nimport { encryptAESKeyWithPublicKey } from \"../../utils/encryption\";\nimport UploadFile from \"../../components/chat/UploadFile\";\nimport DownloadFileButton from \"./DownloadFileButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkPhishingLinks = require(\"../../utils/checkmess\");\nexport default function MessageArea({\n  mode,\n  target,\n  initialMessages = []\n}) {\n  _s();\n  const {\n    token,\n    user\n  } = useContext(AuthContext);\n  const {\n    socket\n  } = useContext(SocketContext);\n  const [messages, setMessages] = useState([]);\n  const [decryptedMessages, setDecryptedMessages] = useState([]);\n  const [content, setContent] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [privateKey, setPrivateKey] = useState(null);\n\n  // Reset khi đổi người\n  useEffect(() => {\n    setMessages(initialMessages);\n    setDecryptedMessages([]);\n    setPrivateKey(null);\n    setPassword(\"\");\n  }, [target, initialMessages]);\n\n  // Lắng nghe socket realtime\n  useEffect(() => {\n    if (!socket) return;\n    const privateOrGroupHandler = msg => {\n      const match = mode === \"private\" && (msg.senderId === target.id || msg.receiverId === target.id);\n      if (match || mode === \"group\") {\n        setMessages(prev => [...prev, msg]);\n      }\n    };\n    const broadcastHandler = msg => {\n      if (mode === \"broadcast\") {\n        setMessages(prev => [...prev, msg]);\n      }\n    };\n    const eventName = mode === \"private\" ? \"private_message\" : \"group_message\";\n    socket.on(eventName, privateOrGroupHandler);\n    socket.on(\"broadcast_message\", broadcastHandler);\n    return () => {\n      socket.off(eventName, privateOrGroupHandler);\n      socket.off(\"broadcast_message\", broadcastHandler);\n    };\n  }, [socket, mode, target]);\n  const handleSend = async () => {\n    if (!content.trim()) return;\n    const result = await checkPhishingLinks(content);\n    if (!result.safe) {\n      return res.status(400).json({\n        message: result.message\n      });\n    }\n    try {\n      if (mode === \"private\") {\n        const receiverRes = await axios.get(`${process.env.REACT_APP_API_URL}/keys/public/${target.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const senderRes = await axios.get(`${process.env.REACT_APP_API_URL}/keys/public/${user.userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          encryptedContent,\n          encryptedAESKey: receiverAESKey,\n          aesKeyRaw\n        } = encryptMessage(content, receiverRes.data.publicKey, true);\n\n        // ✅ Sửa chỗ này\n        const senderAESKey = encryptAESKeyWithPublicKey(aesKeyRaw, senderRes.data.publicKey);\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/messages/private`, {\n          receiverId: target.id,\n          encryptedContent,\n          encryptedAESKeys: [{\n            userId: target.id,\n            aesKey: receiverAESKey\n          }, {\n            userId: user.userId,\n            aesKey: senderAESKey\n          }]\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMessages(prev => [...prev, {\n          ...res.data,\n          // dùng bản từ server trả về vì có đủ dữ liệu và id chuẩn\n          decryptedContent: content\n        }]);\n      }\n      setContent(\"\");\n    } catch (err) {\n      console.error(\"❌ Lỗi gửi tin:\", err);\n    }\n  };\n\n  // Giải mã tin nhắn\n  useEffect(() => {\n    if (!privateKey) return;\n    let isMounted = true;\n    const decryptAll = async () => {\n      const decrypted = await Promise.all(messages.map(msg => {\n        if (msg.senderId === user.userId && msg.decryptedContent) {\n          return msg;\n        }\n        try {\n          var _msg$encryptedAESKeys;\n          const aesEntry = (_msg$encryptedAESKeys = msg.encryptedAESKeys) === null || _msg$encryptedAESKeys === void 0 ? void 0 : _msg$encryptedAESKeys.find(e => e.userId === user.userId);\n          if (!(aesEntry !== null && aesEntry !== void 0 && aesEntry.aesKey)) return {\n            ...msg,\n            decryptedContent: \"❌ Không có AES key phù hợp\"\n          };\n          const aesKey = decryptAESKey(aesEntry.aesKey, privateKey);\n          const clearText = decryptContentAES(msg.encryptedContent, aesKey);\n          return {\n            ...msg,\n            decryptedContent: clearText\n          };\n        } catch {\n          return {\n            ...msg,\n            decryptedContent: \"❌ Không giải mã được\"\n          };\n        }\n      }));\n      if (isMounted) setDecryptedMessages(decrypted);\n    };\n    decryptAll();\n    return () => {\n      isMounted = false;\n    };\n  }, [messages, privateKey, user.userId]);\n  const handleLoadPrivateKey = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/my`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const decrypted = decryptPrivateKey(res.data.encryptedPrivateKey, password);\n      if (!decrypted) {\n        alert(\"❌ Sai mật khẩu hoặc khóa không hợp lệ\");\n      } else {\n        setPrivateKey(decrypted);\n        alert(\"🔓 Đã giải mã private key thành công!\");\n      }\n    } catch (err) {\n      console.error(\"❌ Lỗi tải khóa:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [!privateKey && /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"\\uD83D\\uDD10 Nh\\u1EADp m\\u1EADt kh\\u1EA9u \\u0111\\u1EC3 xem tin nh\\u1EAFn c\\u0169:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 1,\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          size: \"small\",\n          placeholder: \"M\\u1EADt kh\\u1EA9u\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleLoadPrivateKey,\n          children: \"Gi\\u1EA3i m\\xE3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      sx: {\n        maxHeight: 300,\n        overflow: \"auto\",\n        bgcolor: \"#f0f0f0\",\n        mb: 2\n      },\n      children: decryptedMessages.map((msg, i) => {\n        var _msg$sender;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: msg.senderId === user.userId ? \"Bạn\" : ((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.username) || msg.senderId,\n            secondary: msg.decryptedContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), msg.fileUrl && /*#__PURE__*/_jsxDEV(DownloadFileButton, {\n            fileUrl: msg.fileUrl,\n            messageId: msg.id,\n            senderId: msg.senderId,\n            currentUserId: user.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadFile, {\n        onUploadSuccess: fileUrl => {\n          setContent(prev => `${prev} ${fileUrl}`);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleSend,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageArea, \"fW/rrRDARS4OA9SeSzXHPhjcZ68=\");\n_c = MessageArea;\nvar _c;\n$RefreshReg$(_c, \"MessageArea\");","map":{"version":3,"names":["useEffect","useState","useContext","Box","TextField","IconButton","Typography","List","ListItem","ListItemText","Button","SendIcon","axios","AuthContext","SocketContext","encryptMessage","decryptPrivateKey","decryptAESKey","decryptContentAES","encryptAESKeyWithPublicKey","UploadFile","DownloadFileButton","jsxDEV","_jsxDEV","checkPhishingLinks","require","MessageArea","mode","target","initialMessages","_s","token","user","socket","messages","setMessages","decryptedMessages","setDecryptedMessages","content","setContent","password","setPassword","privateKey","setPrivateKey","privateOrGroupHandler","msg","match","senderId","id","receiverId","prev","broadcastHandler","eventName","on","off","handleSend","trim","result","safe","res","status","json","message","receiverRes","get","process","env","REACT_APP_API_URL","headers","Authorization","senderRes","userId","encryptedContent","encryptedAESKey","receiverAESKey","aesKeyRaw","data","publicKey","senderAESKey","post","encryptedAESKeys","aesKey","decryptedContent","err","console","error","isMounted","decryptAll","decrypted","Promise","all","map","_msg$encryptedAESKeys","aesEntry","find","e","clearText","handleLoadPrivateKey","encryptedPrivateKey","alert","children","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","mt","type","size","placeholder","value","onChange","onClick","dense","sx","maxHeight","overflow","bgcolor","i","_msg$sender","primary","sender","username","secondary","fileUrl","messageId","currentUserId","fullWidth","onUploadSuccess","color","_c","$RefreshReg$"],"sources":["D:/Chuyen nganh/Đồ án ATTT/KumoChat/frontend/src/components/chat/MessageArea.jsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Button\r\n} from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\nimport { encryptMessage } from \"../../utils/encryption\";\r\nimport {\r\n  decryptPrivateKey,\r\n  decryptAESKey,\r\n  decryptContentAES\r\n} from \"../../utils/decryption\";\r\nimport { encryptAESKeyWithPublicKey } from \"../../utils/encryption\";\r\nimport UploadFile from \"../../components/chat/UploadFile\"\r\nimport DownloadFileButton from \"./DownloadFileButton\";\r\nconst checkPhishingLinks = require(\"../../utils/checkmess\");\r\n\r\nexport default function MessageArea({ mode, target, initialMessages = [] }) {\r\n  const { token, user } = useContext(AuthContext);\r\n  const { socket } = useContext(SocketContext);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [decryptedMessages, setDecryptedMessages] = useState([]);\r\n  const [content, setContent] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [privateKey, setPrivateKey] = useState(null);\r\n\r\n  // Reset khi đổi người\r\n  useEffect(() => {\r\n    setMessages(initialMessages);\r\n    setDecryptedMessages([]);\r\n    setPrivateKey(null);\r\n    setPassword(\"\");\r\n  }, [target, initialMessages]);\r\n\r\n  // Lắng nghe socket realtime\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const privateOrGroupHandler = (msg) => {\r\n      const match =\r\n        mode === \"private\" &&\r\n        (msg.senderId === target.id || msg.receiverId === target.id);\r\n\r\n      if (match || mode === \"group\") {\r\n        setMessages((prev) => [...prev, msg]);\r\n      }\r\n    };\r\n\r\n    const broadcastHandler = (msg) => {\r\n      if (mode === \"broadcast\") {\r\n        setMessages((prev) => [...prev, msg]);\r\n      }\r\n    };\r\n\r\n    const eventName = mode === \"private\" ? \"private_message\" : \"group_message\";\r\n    socket.on(eventName, privateOrGroupHandler);\r\n    socket.on(\"broadcast_message\", broadcastHandler);\r\n\r\n    return () => {\r\n      socket.off(eventName, privateOrGroupHandler);\r\n      socket.off(\"broadcast_message\", broadcastHandler);\r\n    };\r\n  }, [socket, mode, target]);\r\n\r\n  const handleSend = async () => {\r\n    if (!content.trim()) return;\r\n\r\n    const result = await checkPhishingLinks(content);\r\n    if (!result.safe) {\r\n      return res.status(400).json({ message: result.message });\r\n    }\r\n\r\n    try {\r\n      if (mode === \"private\") {\r\n        const receiverRes = await axios.get(`${process.env.REACT_APP_API_URL}/keys/public/${target.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const senderRes = await axios.get(`${process.env.REACT_APP_API_URL}/keys/public/${user.userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const {\r\n          encryptedContent,\r\n          encryptedAESKey: receiverAESKey,\r\n          aesKeyRaw\r\n        } = encryptMessage(content, receiverRes.data.publicKey, true);\r\n\r\n        // ✅ Sửa chỗ này\r\n        const senderAESKey = encryptAESKeyWithPublicKey(aesKeyRaw, senderRes.data.publicKey);\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/messages/private`, {\r\n          receiverId: target.id,\r\n          encryptedContent,\r\n          encryptedAESKeys: [\r\n            { userId: target.id, aesKey: receiverAESKey },\r\n            { userId: user.userId, aesKey: senderAESKey },\r\n          ],\r\n        }, { headers: { Authorization: `Bearer ${token}` } });\r\n\r\n        setMessages((prev) => [...prev, {\r\n          ...res.data, // dùng bản từ server trả về vì có đủ dữ liệu và id chuẩn\r\n          decryptedContent: content\r\n        }]);\r\n      }\r\n\r\n      setContent(\"\");\r\n    } catch (err) {\r\n      console.error(\"❌ Lỗi gửi tin:\", err);\r\n    }\r\n  };\r\n\r\n  // Giải mã tin nhắn\r\n  useEffect(() => {\r\n    if (!privateKey) return;\r\n\r\n    let isMounted = true;\r\n\r\n    const decryptAll = async () => {\r\n      const decrypted = await Promise.all(messages.map((msg) => {\r\n        if (msg.senderId === user.userId && msg.decryptedContent) {\r\n          return msg;\r\n        }\r\n\r\n        try {\r\n          const aesEntry = msg.encryptedAESKeys?.find(e => e.userId === user.userId);\r\n          if (!aesEntry?.aesKey) return { ...msg, decryptedContent: \"❌ Không có AES key phù hợp\" };\r\n\r\n          const aesKey = decryptAESKey(aesEntry.aesKey, privateKey);\r\n          const clearText = decryptContentAES(msg.encryptedContent, aesKey);\r\n          return { ...msg, decryptedContent: clearText };\r\n        } catch {\r\n          return { ...msg, decryptedContent: \"❌ Không giải mã được\" };\r\n        }\r\n      }));\r\n\r\n      if (isMounted) setDecryptedMessages(decrypted);\r\n    };\r\n\r\n    decryptAll();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [messages, privateKey, user.userId]);\r\n\r\n  const handleLoadPrivateKey = async () => {\r\n    try {\r\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/my`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      const decrypted = decryptPrivateKey(res.data.encryptedPrivateKey, password);\r\n      if (!decrypted) {\r\n        alert(\"❌ Sai mật khẩu hoặc khóa không hợp lệ\");\r\n      } else {\r\n        setPrivateKey(decrypted);\r\n        alert(\"🔓 Đã giải mã private key thành công!\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"❌ Lỗi tải khóa:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {!privateKey && (\r\n        <Box mb={2}>\r\n          <Typography variant=\"body2\">🔐 Nhập mật khẩu để xem tin nhắn cũ:</Typography>\r\n          <Box display=\"flex\" gap={1} mt={1}>\r\n            <TextField\r\n              type=\"password\"\r\n              size=\"small\"\r\n              placeholder=\"Mật khẩu\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button variant=\"outlined\" onClick={handleLoadPrivateKey}>\r\n              Giải mã\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      <List dense sx={{ maxHeight: 300, overflow: \"auto\", bgcolor: \"#f0f0f0\", mb: 2 }}>\r\n        {decryptedMessages.map((msg, i) => (\r\n          <ListItem key={i}>\r\n            <ListItemText\r\n              primary={msg.senderId === user.userId ? \"Bạn\" : msg.sender?.username || msg.senderId}\r\n              secondary={msg.decryptedContent}\r\n            />\r\n            {msg.fileUrl && (\r\n              <DownloadFileButton\r\n                fileUrl={msg.fileUrl}\r\n                messageId={msg.id}\r\n                senderId={msg.senderId}\r\n                currentUserId={user.userId}\r\n              />\r\n            )}\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <Box display=\"flex\" gap={1}>\r\n        <TextField\r\n          fullWidth\r\n          placeholder=\"Nhập tin nhắn...\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n\r\n        <UploadFile onUploadSuccess={(fileUrl) => {\r\n          setContent(prev => `${prev} ${fileUrl}`);\r\n        }} />\r\n\r\n        <IconButton onClick={handleSend} color=\"primary\">\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}