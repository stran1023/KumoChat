{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chuyen nganh\\\\\\u0110\\u1ED3 \\xE1n ATTT\\\\KumoChat\\\\frontend\\\\src\\\\components\\\\chat\\\\BroadcastChatAdmin.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Box, Typography, List, ListItem, ListItemText, TextField, Button } from \"@mui/material\";\nimport { encryptMessage } from \"../../utils/encryption\";\nimport { decryptPrivateKey, decryptAESKey, decryptContentAES } from \"../../utils/decryption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BroadcastChatAdmin() {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [messages, setMessages] = useState([]);\n  const [broadcastInput, setBroadcastInput] = useState(\"\");\n  const sendBroadcast = async message => {\n    const adminUser = JSON.parse(localStorage.getItem(\"user\"));\n    const resUsers = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const allUsers = resUsers.data.filter(u => u.id !== adminUser.id);\n    const encryptedAESKeys = [];\n    let encryptedContent;\n    for (const user of allUsers) {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users/${user.id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const publicKeyPem = res.data.publicKey;\n      const {\n        encryptedContent: encContent,\n        encryptedAESKey\n      } = encryptMessage(message, publicKeyPem);\n      if (!encryptedContent) encryptedContent = encContent;\n      encryptedAESKeys.push({\n        userId: user.id,\n        aesKey: encryptedAESKey\n      });\n    }\n    await axios.post(`${process.env.REACT_APP_API_URL}/admin/broadcast`, {\n      encryptedContent,\n      encryptedAESKeys\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    alert(\"✅ Tin nhắn broadcast đã gửi đến tất cả người dùng!\");\n  };\n  const handleSend = async () => {\n    if (!broadcastInput.trim()) return;\n    await sendBroadcast(broadcastInput);\n    setBroadcastInput(\"\");\n    fetchBroadcasts(); // refresh sau khi gửi\n  };\n  const fetchBroadcasts = useCallback(async () => {\n    const token = localStorage.getItem(\"token\");\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const passphrase = prompt(\"🔐 Nhập mật khẩu để giải mã:\");\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/admin/messages/broadcast`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const privateKey = decryptPrivateKey(user.encryptedPrivateKey, passphrase);\n    if (!privateKey) return alert(\"❌ Giải mã private key thất bại!\");\n    const decrypted = res.data.map(msg => {\n      try {\n        var _msg$encryptedAESKeys, _msg$sender;\n        const encAES = (_msg$encryptedAESKeys = msg.encryptedAESKeys.find(k => k.userId === user.id)) === null || _msg$encryptedAESKeys === void 0 ? void 0 : _msg$encryptedAESKeys.aesKey;\n        if (!encAES) throw new Error(\"Không có AES key\");\n        const aesKey = decryptAESKey(encAES, privateKey);\n        const plaintext = decryptContentAES(msg.encryptedContent, aesKey);\n        return {\n          ...msg,\n          senderName: ((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.username) || \"admin\",\n          decryptedContent: plaintext || \"(Không thể giải mã)\"\n        };\n      } catch (err) {\n        var _msg$sender2;\n        return {\n          ...msg,\n          senderName: ((_msg$sender2 = msg.sender) === null || _msg$sender2 === void 0 ? void 0 : _msg$sender2.username) || \"admin\",\n          decryptedContent: \"(Lỗi giải mã)\"\n        };\n      }\n    });\n    setMessages(decrypted);\n  }, []);\n  useEffect(() => {\n    fetchBroadcasts();\n  }, [fetchBroadcasts]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      fontWeight: 600,\n      gutterBottom: true,\n      children: \"\\uD83D\\uDCE2 G\\u1EEDi tin nh\\u1EAFn Broadcast (Admin)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      sx: {\n        maxHeight: 300,\n        overflow: \"auto\",\n        bgcolor: \"#f4f4f4\",\n        mb: 2\n      },\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `Từ: ${msg.senderName}`,\n          secondary: msg.decryptedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"So\\u1EA1n tin broadcast\",\n      value: broadcastInput,\n      onChange: e => setBroadcastInput(e.target.value),\n      multiline: true,\n      rows: 2,\n      sx: {\n        mb: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleSend,\n      children: \"G\\u1EEDi Broadcast \\uD83D\\uDCE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(BroadcastChatAdmin, \"WX9nu16ZkUttNi2IGAsp6R3CLCU=\");\n_c = BroadcastChatAdmin;\nvar _c;\n$RefreshReg$(_c, \"BroadcastChatAdmin\");","map":{"version":3,"names":["useEffect","useState","useContext","useCallback","axios","AuthContext","Box","Typography","List","ListItem","ListItemText","TextField","Button","encryptMessage","decryptPrivateKey","decryptAESKey","decryptContentAES","jsxDEV","_jsxDEV","BroadcastChatAdmin","_s","token","messages","setMessages","broadcastInput","setBroadcastInput","sendBroadcast","message","adminUser","JSON","parse","localStorage","getItem","resUsers","get","process","env","REACT_APP_API_URL","headers","Authorization","allUsers","data","filter","u","id","encryptedAESKeys","encryptedContent","user","res","publicKeyPem","publicKey","encContent","encryptedAESKey","push","userId","aesKey","post","alert","handleSend","trim","fetchBroadcasts","passphrase","prompt","privateKey","encryptedPrivateKey","decrypted","map","msg","_msg$encryptedAESKeys","_msg$sender","encAES","find","k","Error","plaintext","senderName","sender","username","decryptedContent","err","_msg$sender2","children","variant","fontWeight","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","dense","sx","maxHeight","overflow","bgcolor","mb","primary","secondary","fullWidth","label","value","onChange","e","target","multiline","rows","onClick","_c","$RefreshReg$"],"sources":["D:/Chuyen nganh/Đồ án ATTT/KumoChat/frontend/src/components/chat/BroadcastChatAdmin.jsx"],"sourcesContent":["import { useEffect, useState, useContext, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { Box, Typography, List, ListItem, ListItemText, TextField, Button } from \"@mui/material\";\r\nimport { encryptMessage } from \"../../utils/encryption\";\r\nimport { decryptPrivateKey, decryptAESKey, decryptContentAES } from \"../../utils/decryption\";\r\n\r\nexport default function BroadcastChatAdmin() {\r\n  const { token } = useContext(AuthContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [broadcastInput, setBroadcastInput] = useState(\"\");\r\n\r\n  const sendBroadcast = async (message) => {\r\n    const adminUser = JSON.parse(localStorage.getItem(\"user\"));\r\n    const resUsers = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    const allUsers = resUsers.data.filter(u => u.id !== adminUser.id);\r\n    const encryptedAESKeys = [];\r\n    let encryptedContent;\r\n\r\n    for (const user of allUsers) {\r\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users/${user.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      const publicKeyPem = res.data.publicKey;\r\n      const { encryptedContent: encContent, encryptedAESKey } = encryptMessage(message, publicKeyPem);\r\n      if (!encryptedContent) encryptedContent = encContent;\r\n\r\n      encryptedAESKeys.push({ userId: user.id, aesKey: encryptedAESKey });\r\n    }\r\n\r\n    await axios.post(`${process.env.REACT_APP_API_URL}/admin/broadcast`, {\r\n      encryptedContent,\r\n      encryptedAESKeys\r\n    }, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    alert(\"✅ Tin nhắn broadcast đã gửi đến tất cả người dùng!\");\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!broadcastInput.trim()) return;\r\n    await sendBroadcast(broadcastInput);\r\n    setBroadcastInput(\"\");\r\n    fetchBroadcasts(); // refresh sau khi gửi\r\n  };\r\n\r\n  const fetchBroadcasts = useCallback(async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const passphrase = prompt(\"🔐 Nhập mật khẩu để giải mã:\");\r\n\r\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/admin/messages/broadcast`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    const privateKey = decryptPrivateKey(user.encryptedPrivateKey, passphrase);\r\n    if (!privateKey) return alert(\"❌ Giải mã private key thất bại!\");\r\n\r\n    const decrypted = res.data.map((msg) => {\r\n      try {\r\n        const encAES = msg.encryptedAESKeys.find(k => k.userId === user.id)?.aesKey;\r\n        if (!encAES) throw new Error(\"Không có AES key\");\r\n\r\n        const aesKey = decryptAESKey(encAES, privateKey);\r\n        const plaintext = decryptContentAES(msg.encryptedContent, aesKey);\r\n\r\n        return {\r\n          ...msg,\r\n          senderName: msg.sender?.username || \"admin\",\r\n          decryptedContent: plaintext || \"(Không thể giải mã)\",\r\n        };\r\n      } catch (err) {\r\n        return {\r\n          ...msg,\r\n          senderName: msg.sender?.username || \"admin\",\r\n          decryptedContent: \"(Lỗi giải mã)\",\r\n        };\r\n      }\r\n    });\r\n\r\n    setMessages(decrypted);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchBroadcasts();\r\n  }, [fetchBroadcasts]);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" fontWeight={600} gutterBottom>\r\n        📢 Gửi tin nhắn Broadcast (Admin)\r\n      </Typography>\r\n\r\n      <List dense sx={{ maxHeight: 300, overflow: \"auto\", bgcolor: \"#f4f4f4\", mb: 2 }}>\r\n        {messages.map(msg => (\r\n          <ListItem key={msg.id}>\r\n            <ListItemText\r\n              primary={`Từ: ${msg.senderName}`}\r\n              secondary={msg.decryptedContent}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <TextField\r\n        fullWidth\r\n        label=\"Soạn tin broadcast\"\r\n        value={broadcastInput}\r\n        onChange={(e) => setBroadcastInput(e.target.value)}\r\n        multiline\r\n        rows={2}\r\n        sx={{ mb: 1 }}\r\n      />\r\n      <Button variant=\"contained\" onClick={handleSend}>\r\n        Gửi Broadcast 📤\r\n      </Button>\r\n    </Box>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}