{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chuyen nganh\\\\\\u0110\\u1ED3 \\xE1n ATTT\\\\KumoChat\\\\frontend\\\\src\\\\components\\\\chat\\\\BroadcastChat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport forge from \"node-forge\";\nimport CryptoJS from \"crypto-js\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { SocketContext } from \"../../context/SocketContext\";\nimport { Box, Typography, List, ListItem, ListItemText, TextField, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BroadcastChat() {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    socket\n  } = useContext(SocketContext);\n  const [messages, setMessages] = useState([]);\n  const [password, setPassword] = useState(\"\");\n  const [privateKey, setPrivateKey] = useState(null);\n  const loadPrivateKey = async () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const decrypted = decryptPrivateKey(user.encryptedPrivateKey, password);\n    if (!decrypted) {\n      alert(\"❌ Sai mật khẩu hoặc private key không hợp lệ\");\n      return;\n    }\n    setPrivateKey(forge.pki.privateKeyFromPem(decrypted));\n    alert(\"🔓 Đã giải mã private key thành công!\");\n  };\n  const decryptMessage = msg => {\n    try {\n      var _msg$sender;\n      const aesKeyBytes = privateKey.decrypt(forge.util.decode64(msg.encryptedAESKey), \"RSA-OAEP\");\n      const decrypted = CryptoJS.AES.decrypt(msg.encryptedContent, aesKeyBytes);\n      const plaintext = decrypted.toString(CryptoJS.enc.Utf8);\n      return {\n        ...msg,\n        senderName: ((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.username) || \"admin\",\n        decryptedContent: plaintext || \"(Không thể giải mã)\"\n      };\n    } catch {\n      var _msg$sender2;\n      return {\n        ...msg,\n        senderName: ((_msg$sender2 = msg.sender) === null || _msg$sender2 === void 0 ? void 0 : _msg$sender2.username) || \"Không rõ\",\n        decryptedContent: \"(Lỗi giải mã)\"\n      };\n    }\n  };\n\n  // Fetch tin cũ\n  useEffect(() => {\n    const fetchBroadcasts = async () => {\n      if (!privateKey) return;\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/messages/broadcast`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const decryptedMsgs = res.data.map(decryptMessage);\n      setMessages(decryptedMsgs);\n    };\n    fetchBroadcasts();\n  }, [token, privateKey]);\n\n  // Tin mới realtime\n  useEffect(() => {\n    if (!socket || !privateKey) return;\n    const handler = msg => {\n      const decrypted = decryptMessage(msg);\n      setMessages(prev => [...prev, decrypted]);\n    };\n    socket.on(\"broadcast_message\", handler);\n    return () => socket.off(\"broadcast_message\", handler);\n  }, [socket, privateKey]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      fontWeight: 600,\n      children: \"\\uD83D\\uDCE2 Tin nh\\u1EAFn Broadcast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), !privateKey && /*#__PURE__*/_jsxDEV(Box, {\n      my: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"\\uD83D\\uDD10 Nh\\u1EADp m\\u1EADt kh\\u1EA9u \\u0111\\u1EC3 gi\\u1EA3i RSA key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 1,\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          size: \"small\",\n          placeholder: \"M\\u1EADt kh\\u1EA9u\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: loadPrivateKey,\n          children: \"Gi\\u1EA3i m\\xE3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      sx: {\n        maxHeight: 300,\n        overflow: \"auto\",\n        bgcolor: \"#f4f4f4\",\n        mt: 2\n      },\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `Từ: ${msg.senderName}`,\n          secondary: msg.decryptedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n// 🔐 Giải RSA private key đã mã hóa bằng mật khẩu\n_s(BroadcastChat, \"8I7ZmkdjT9qpgDCIN1/RHGNctmQ=\");\n_c = BroadcastChat;\nfunction decryptPrivateKey(encryptedPem, passphrase) {\n  try {\n    const privateKey = forge.pki.decryptRsaPrivateKey(encryptedPem, passphrase);\n    return privateKey ? forge.pki.privateKeyToPem(privateKey) : null;\n  } catch {\n    return null;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"BroadcastChat\");","map":{"version":3,"names":["useEffect","useState","useContext","axios","forge","CryptoJS","AuthContext","SocketContext","Box","Typography","List","ListItem","ListItemText","TextField","Button","jsxDEV","_jsxDEV","BroadcastChat","_s","token","socket","messages","setMessages","password","setPassword","privateKey","setPrivateKey","loadPrivateKey","user","JSON","parse","localStorage","getItem","decrypted","decryptPrivateKey","encryptedPrivateKey","alert","pki","privateKeyFromPem","decryptMessage","msg","_msg$sender","aesKeyBytes","decrypt","util","decode64","encryptedAESKey","AES","encryptedContent","plaintext","toString","enc","Utf8","senderName","sender","username","decryptedContent","_msg$sender2","fetchBroadcasts","res","get","process","env","REACT_APP_API_URL","headers","Authorization","decryptedMsgs","data","map","handler","prev","on","off","children","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","my","display","gap","mt","type","size","placeholder","value","onChange","e","target","onClick","dense","sx","maxHeight","overflow","bgcolor","primary","secondary","id","_c","encryptedPem","passphrase","decryptRsaPrivateKey","privateKeyToPem","$RefreshReg$"],"sources":["D:/Chuyen nganh/Đồ án ATTT/KumoChat/frontend/src/components/chat/BroadcastChat.jsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport forge from \"node-forge\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\nimport { Box, Typography, List, ListItem, ListItemText, TextField, Button } from \"@mui/material\";\r\n\r\nexport default function BroadcastChat() {\r\n  const { token } = useContext(AuthContext);\r\n  const { socket } = useContext(SocketContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [privateKey, setPrivateKey] = useState(null);\r\n\r\n  const loadPrivateKey = async () => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const decrypted = decryptPrivateKey(user.encryptedPrivateKey, password);\r\n    if (!decrypted) {\r\n      alert(\"❌ Sai mật khẩu hoặc private key không hợp lệ\");\r\n      return;\r\n    }\r\n    setPrivateKey(forge.pki.privateKeyFromPem(decrypted));\r\n    alert(\"🔓 Đã giải mã private key thành công!\");\r\n  };\r\n\r\n  const decryptMessage = (msg) => {\r\n    try {\r\n      const aesKeyBytes = privateKey.decrypt(forge.util.decode64(msg.encryptedAESKey), \"RSA-OAEP\");\r\n      const decrypted = CryptoJS.AES.decrypt(msg.encryptedContent, aesKeyBytes);\r\n      const plaintext = decrypted.toString(CryptoJS.enc.Utf8);\r\n\r\n      return {\r\n        ...msg,\r\n        senderName: msg.sender?.username || \"admin\",\r\n        decryptedContent: plaintext || \"(Không thể giải mã)\"\r\n      };\r\n    } catch {\r\n      return {\r\n        ...msg,\r\n        senderName: msg.sender?.username || \"Không rõ\",\r\n        decryptedContent: \"(Lỗi giải mã)\"\r\n      };\r\n    }\r\n  };\r\n\r\n  // Fetch tin cũ\r\n  useEffect(() => {\r\n    const fetchBroadcasts = async () => {\r\n      if (!privateKey) return;\r\n\r\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/messages/broadcast`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      const decryptedMsgs = res.data.map(decryptMessage);\r\n      setMessages(decryptedMsgs);\r\n    };\r\n\r\n    fetchBroadcasts();\r\n  }, [token, privateKey]);\r\n\r\n  // Tin mới realtime\r\n  useEffect(() => {\r\n    if (!socket || !privateKey) return;\r\n\r\n    const handler = (msg) => {\r\n      const decrypted = decryptMessage(msg);\r\n      setMessages((prev) => [...prev, decrypted]);\r\n    };\r\n\r\n    socket.on(\"broadcast_message\", handler);\r\n    return () => socket.off(\"broadcast_message\", handler);\r\n  }, [socket, privateKey]);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"subtitle1\" fontWeight={600}>\r\n        📢 Tin nhắn Broadcast\r\n      </Typography>\r\n\r\n      {!privateKey && (\r\n        <Box my={2}>\r\n          <Typography variant=\"body2\">🔐 Nhập mật khẩu để giải RSA key:</Typography>\r\n          <Box display=\"flex\" gap={1} mt={1}>\r\n            <TextField\r\n              type=\"password\"\r\n              size=\"small\"\r\n              placeholder=\"Mật khẩu\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button variant=\"outlined\" onClick={loadPrivateKey}>\r\n              Giải mã\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      <List dense sx={{ maxHeight: 300, overflow: \"auto\", bgcolor: \"#f4f4f4\", mt: 2 }}>\r\n        {messages.map((msg) => (\r\n          <ListItem key={msg.id}>\r\n            <ListItemText\r\n              primary={`Từ: ${msg.senderName}`}\r\n              secondary={msg.decryptedContent}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// 🔐 Giải RSA private key đã mã hóa bằng mật khẩu\r\nfunction decryptPrivateKey(encryptedPem, passphrase) {\r\n  try {\r\n    const privateKey = forge.pki.decryptRsaPrivateKey(encryptedPem, passphrase);\r\n    return privateKey ? forge.pki.privateKeyToPem(privateKey) : null;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}