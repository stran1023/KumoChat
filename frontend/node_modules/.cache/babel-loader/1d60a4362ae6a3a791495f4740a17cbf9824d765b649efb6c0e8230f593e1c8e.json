{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chuyen nganh\\\\\\u0110\\u1ED3 \\xE1n ATTT\\\\KumoChat\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageArea.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { Box, TextField, IconButton, List, ListItem, ListItemText } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { SocketContext } from \"../../context/SocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageArea({\n  mode,\n  target\n}) {\n  _s();\n  const {\n    token,\n    user\n  } = useContext(AuthContext);\n  const {\n    socket\n  } = useContext(SocketContext);\n  const [messages, setMessages] = useState([]);\n  const [content, setContent] = useState(\"\");\n\n  // Emit khi nhận realtime message\n  useEffect(() => {\n    if (!socket) return;\n    const handler = msg => {\n      const match = mode === \"private\" && msg.senderId === target.id || mode === \"group\" && msg.departmentId === target.id;\n      if (match) setMessages(prev => [...prev, msg]);\n    };\n    const eventName = mode === \"private\" ? \"private_message\" : \"group_message\";\n    socket.on(eventName, handler);\n    return () => socket.off(eventName, handler);\n  }, [socket, mode, target]);\n\n  // Load messages ban đầu (optional nếu cần fetch cũ)\n  // useEffect(() => { fetch if needed }, [target])\n\n  const handleSend = async () => {\n    if (!content.trim()) return;\n    try {\n      if (mode === \"private\") {\n        await axios.post(`${process.env.REACT_APP_API_URL}/messages/private`, {\n          receiverId: target.id,\n          encryptedContent: content,\n          encryptedAESKey: \"demo-key\" // Giả sử\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      } else if (mode === \"group\") {\n        await axios.post(`${process.env.REACT_APP_API_URL}/messages/group`, {\n          departmentId: target.id,\n          encryptedContent: content\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      setMessages(prev => [...prev, {\n        senderId: user.userId,\n        encryptedContent: content\n      }]);\n      setContent(\"\");\n    } catch (err) {\n      console.error(\"❌ Gửi tin nhắn thất bại:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      sx: {\n        maxHeight: 300,\n        overflow: \"auto\",\n        bgcolor: \"#f0f0f0\",\n        mb: 2\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: msg.senderId === user.userId ? \"Bạn\" : msg.senderId,\n          secondary: msg.encryptedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleSend,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageArea, \"PDg/uwrivRxy9kdi5QPC4lcIt8M=\");\n_c = MessageArea;\nvar _c;\n$RefreshReg$(_c, \"MessageArea\");","map":{"version":3,"names":["useEffect","useState","useContext","Box","TextField","IconButton","List","ListItem","ListItemText","SendIcon","axios","AuthContext","SocketContext","jsxDEV","_jsxDEV","MessageArea","mode","target","_s","token","user","socket","messages","setMessages","content","setContent","handler","msg","match","senderId","id","departmentId","prev","eventName","on","off","handleSend","trim","post","process","env","REACT_APP_API_URL","receiverId","encryptedContent","encryptedAESKey","headers","Authorization","userId","err","console","error","children","dense","sx","maxHeight","overflow","bgcolor","mb","map","i","primary","secondary","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","fullWidth","placeholder","value","onChange","e","onClick","color","_c","$RefreshReg$"],"sources":["D:/Chuyen nganh/Đồ án ATTT/KumoChat/frontend/src/components/chat/MessageArea.jsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport { Box, TextField, IconButton, List, ListItem, ListItemText } from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\n\r\nexport default function MessageArea({ mode, target }) {\r\n  const { token, user } = useContext(AuthContext);\r\n  const { socket } = useContext(SocketContext);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  // Emit khi nhận realtime message\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const handler = (msg) => {\r\n      const match =\r\n        (mode === \"private\" && msg.senderId === target.id) ||\r\n        (mode === \"group\" && msg.departmentId === target.id);\r\n\r\n      if (match) setMessages((prev) => [...prev, msg]);\r\n    };\r\n\r\n    const eventName = mode === \"private\" ? \"private_message\" : \"group_message\";\r\n    socket.on(eventName, handler);\r\n\r\n    return () => socket.off(eventName, handler);\r\n  }, [socket, mode, target]);\r\n\r\n  // Load messages ban đầu (optional nếu cần fetch cũ)\r\n  // useEffect(() => { fetch if needed }, [target])\r\n\r\n  const handleSend = async () => {\r\n    if (!content.trim()) return;\r\n\r\n    try {\r\n      if (mode === \"private\") {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/messages/private`, {\r\n          receiverId: target.id,\r\n          encryptedContent: content,\r\n          encryptedAESKey: \"demo-key\", // Giả sử\r\n        }, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n      } else if (mode === \"group\") {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/messages/group`, {\r\n          departmentId: target.id,\r\n          encryptedContent: content,\r\n        }, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n      }\r\n\r\n      setMessages((prev) => [...prev, {\r\n        senderId: user.userId,\r\n        encryptedContent: content,\r\n      }]);\r\n      setContent(\"\");\r\n    } catch (err) {\r\n      console.error(\"❌ Gửi tin nhắn thất bại:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <List dense sx={{ maxHeight: 300, overflow: \"auto\", bgcolor: \"#f0f0f0\", mb: 2 }}>\r\n        {messages.map((msg, i) => (\r\n          <ListItem key={i}>\r\n            <ListItemText\r\n              primary={msg.senderId === user.userId ? \"Bạn\" : msg.senderId}\r\n              secondary={msg.encryptedContent}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <Box display=\"flex\" gap={1}>\r\n        <TextField\r\n          fullWidth\r\n          placeholder=\"Nhập tin nhắn...\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <IconButton onClick={handleSend} color=\"primary\">\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}