{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chuyen nganh\\\\\\u0110\\u1ED3 \\xE1n ATTT\\\\KumoChat\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageArea.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { Box, TextField, IconButton, Typography, List, ListItem, ListItemText, Button } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { SocketContext } from \"../../context/SocketContext\";\nimport { encryptMessage } from \"../../utils/encryption\";\nimport { decryptPrivateKey, decryptAESKey, decryptContentAES } from \"../../utils/decryption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageArea({\n  mode,\n  target,\n  initialMessages = []\n}) {\n  _s();\n  const {\n    token,\n    user\n  } = useContext(AuthContext);\n  const {\n    socket\n  } = useContext(SocketContext);\n  const [messages, setMessages] = useState([]);\n  const [decryptedMessages, setDecryptedMessages] = useState([]);\n  const [content, setContent] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [privateKey, setPrivateKey] = useState(null);\n  const getUsername = (id, msg) => {\n    var _msg$sender;\n    if (id === user.userId) return \"B·∫°n\";\n    return ((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.username) || id;\n  };\n  useEffect(() => {\n    setMessages(initialMessages);\n    console.log(initialMessages);\n  }, [initialMessages]);\n\n  // L·∫Øng nghe socket realtime\n  useEffect(() => {\n    if (!socket) return;\n    const handler = msg => {\n      const match = mode === \"private\" && (msg.senderId === target.id || msg.receiverId === target.id);\n      if (match) {\n        setMessages(prev => [...prev, msg]);\n      }\n    };\n    const eventName = mode === \"private\" ? \"private_message\" : \"group_message\";\n    socket.on(eventName, handler);\n    return () => socket.off(eventName, handler);\n  }, [socket, mode, target]);\n\n  // G·ª≠i tin nh·∫Øn\n  const handleSend = async () => {\n    if (!content.trim()) return;\n    try {\n      if (mode === \"private\") {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/public/${target.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          encryptedContent,\n          encryptedAESKey\n        } = encryptMessage(content, res.data.publicKey);\n        await axios.post(`${process.env.REACT_APP_API_URL}/messages/private`, {\n          receiverId: target.id,\n          encryptedContent,\n          encryptedAESKey\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMessages(prev => [...prev, {\n          senderId: user.userId,\n          senderName: user.username,\n          encryptedContent,\n          encryptedAESKey,\n          decryptedContent: content\n        }]);\n      }\n      setContent(\"\");\n    } catch (err) {\n      console.error(\"‚ùå L·ªói g·ª≠i tin:\", err);\n    }\n  };\n\n  // Gi·∫£i m√£ khi c√≥ tin nh·∫Øn m·ªõi\n  useEffect(() => {\n    const decryptAll = async () => {\n      if (!privateKey) return;\n      const decrypted = await Promise.all(messages.map(msg => {\n        if (msg.decryptedContent) return msg;\n        if (msg.senderId === user.userId) {\n          return {\n            ...msg,\n            decryptedContent: content\n          };\n        }\n        try {\n          const aesKey = msg.encryptedAESKey ? decryptAESKey(msg.encryptedAESKey, privateKey) : null;\n          const content = aesKey ? decryptContentAES(msg.encryptedContent, aesKey) : msg.encryptedContent;\n          return {\n            ...msg,\n            decryptedContent: content\n          };\n        } catch {\n          return {\n            ...msg,\n            decryptedContent: \"‚ùå Kh√¥ng gi·∫£i m√£ ƒë∆∞·ª£c\"\n          };\n        }\n      }));\n      setDecryptedMessages(decrypted);\n    };\n    decryptAll();\n  }, [messages, privateKey, content, user.userId]);\n\n  // Nh·∫≠p password ƒë·ªÉ gi·∫£i RSA key\n  const handleLoadPrivateKey = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/my`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const decrypted = decryptPrivateKey(res.data.encryptedPrivateKey, password);\n      if (!decrypted) {\n        alert(\"‚ùå Sai m·∫≠t kh·∫©u ho·∫∑c kh√≥a kh√¥ng h·ª£p l·ªá\");\n      } else {\n        setPrivateKey(decrypted);\n        alert(\"üîì ƒê√£ gi·∫£i m√£ private key th√†nh c√¥ng!\");\n      }\n    } catch (err) {\n      console.error(\"‚ùå L·ªói t·∫£i kh√≥a:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [!privateKey && /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"\\uD83D\\uDD10 Nh\\u1EADp m\\u1EADt kh\\u1EA9u \\u0111\\u1EC3 gi\\u1EA3i RSA key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 1,\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          size: \"small\",\n          placeholder: \"M\\u1EADt kh\\u1EA9u\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleLoadPrivateKey,\n          children: \"Gi\\u1EA3i m\\xE3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      sx: {\n        maxHeight: 300,\n        overflow: \"auto\",\n        bgcolor: \"#f0f0f0\",\n        mb: 2\n      },\n      children: decryptedMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: getUsername(msg.senderId, msg),\n          secondary: msg.decryptedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleSend,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageArea, \"fW/rrRDARS4OA9SeSzXHPhjcZ68=\");\n_c = MessageArea;\nvar _c;\n$RefreshReg$(_c, \"MessageArea\");","map":{"version":3,"names":["useEffect","useState","useContext","Box","TextField","IconButton","Typography","List","ListItem","ListItemText","Button","SendIcon","axios","AuthContext","SocketContext","encryptMessage","decryptPrivateKey","decryptAESKey","decryptContentAES","jsxDEV","_jsxDEV","MessageArea","mode","target","initialMessages","_s","token","user","socket","messages","setMessages","decryptedMessages","setDecryptedMessages","content","setContent","password","setPassword","privateKey","setPrivateKey","getUsername","id","msg","_msg$sender","userId","sender","username","console","log","handler","match","senderId","receiverId","prev","eventName","on","off","handleSend","trim","res","get","process","env","REACT_APP_API_URL","headers","Authorization","encryptedContent","encryptedAESKey","data","publicKey","post","senderName","decryptedContent","err","error","decryptAll","decrypted","Promise","all","map","aesKey","handleLoadPrivateKey","encryptedPrivateKey","alert","children","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","mt","type","size","placeholder","value","onChange","e","onClick","dense","sx","maxHeight","overflow","bgcolor","i","primary","secondary","fullWidth","color","_c","$RefreshReg$"],"sources":["D:/Chuyen nganh/ƒê·ªì √°n ATTT/KumoChat/frontend/src/components/chat/MessageArea.jsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport { Box, TextField, IconButton, Typography, List, ListItem, ListItemText, Button } from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\nimport { encryptMessage } from \"../../utils/encryption\";\r\nimport {\r\n  decryptPrivateKey,\r\n  decryptAESKey,\r\n  decryptContentAES\r\n} from \"../../utils/decryption\";\r\n\r\nexport default function MessageArea({ mode, target, initialMessages = [] }) {\r\n  const { token, user } = useContext(AuthContext);\r\n  const { socket } = useContext(SocketContext);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [decryptedMessages, setDecryptedMessages] = useState([]);\r\n  const [content, setContent] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [privateKey, setPrivateKey] = useState(null);\r\n\r\n  const getUsername = (id, msg) => {\r\n    if (id === user.userId) return \"B·∫°n\";\r\n    return msg.sender?.username || id;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    setMessages(initialMessages);\r\n    console.log(initialMessages)\r\n  }, [initialMessages]);\r\n\r\n  // L·∫Øng nghe socket realtime\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const handler = (msg) => {\r\n      const match =\r\n        mode === \"private\" &&\r\n        (msg.senderId === target.id || msg.receiverId === target.id);\r\n\r\n      if (match) {\r\n        setMessages((prev) => [...prev, msg]);\r\n      }\r\n    };\r\n\r\n    const eventName = mode === \"private\" ? \"private_message\" : \"group_message\";\r\n    socket.on(eventName, handler);\r\n    return () => socket.off(eventName, handler);\r\n  }, [socket, mode, target]);\r\n\r\n  // G·ª≠i tin nh·∫Øn\r\n  const handleSend = async () => {\r\n    if (!content.trim()) return;\r\n\r\n    try {\r\n      if (mode === \"private\") {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/public/${target.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const { encryptedContent, encryptedAESKey } = encryptMessage(content, res.data.publicKey);\r\n\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/messages/private`, {\r\n          receiverId: target.id,\r\n          encryptedContent,\r\n          encryptedAESKey,\r\n        }, { headers: { Authorization: `Bearer ${token}` } });\r\n\r\n        setMessages((prev) => [...prev, { \r\n          senderId: user.userId, \r\n          senderName: user.username, \r\n          encryptedContent, \r\n          encryptedAESKey, \r\n          decryptedContent: content \r\n        }]);\r\n      }\r\n\r\n      setContent(\"\");\r\n    } catch (err) {\r\n      console.error(\"‚ùå L·ªói g·ª≠i tin:\", err);\r\n    }\r\n  };\r\n\r\n  // Gi·∫£i m√£ khi c√≥ tin nh·∫Øn m·ªõi\r\n  useEffect(() => {\r\n    const decryptAll = async () => {\r\n      if (!privateKey) return;\r\n\r\n      const decrypted = await Promise.all(messages.map((msg) => {\r\n        if (msg.decryptedContent) return msg;\r\n\r\n        if (msg.senderId === user.userId) {\r\n          return { ...msg, decryptedContent: content };\r\n        }\r\n\r\n        try {\r\n          const aesKey = msg.encryptedAESKey\r\n            ? decryptAESKey(msg.encryptedAESKey, privateKey)\r\n            : null;\r\n\r\n          const content = aesKey\r\n            ? decryptContentAES(msg.encryptedContent, aesKey)\r\n            : msg.encryptedContent;\r\n\r\n          return { ...msg, decryptedContent: content };\r\n        } catch {\r\n          return { ...msg, decryptedContent: \"‚ùå Kh√¥ng gi·∫£i m√£ ƒë∆∞·ª£c\" };\r\n        }\r\n      }));\r\n\r\n      setDecryptedMessages(decrypted);\r\n    };\r\n\r\n    decryptAll();\r\n  }, [messages, privateKey, content, user.userId]);\r\n\r\n  // Nh·∫≠p password ƒë·ªÉ gi·∫£i RSA key\r\n  const handleLoadPrivateKey = async () => {\r\n    try {\r\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/keys/my`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      const decrypted = decryptPrivateKey(res.data.encryptedPrivateKey, password);\r\n      if (!decrypted) {\r\n        alert(\"‚ùå Sai m·∫≠t kh·∫©u ho·∫∑c kh√≥a kh√¥ng h·ª£p l·ªá\");\r\n      } else {\r\n        setPrivateKey(decrypted);\r\n        alert(\"üîì ƒê√£ gi·∫£i m√£ private key th√†nh c√¥ng!\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"‚ùå L·ªói t·∫£i kh√≥a:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {/* Form nh·∫≠p m·∫≠t kh·∫©u gi·∫£i RSA */}\r\n      {!privateKey && (\r\n        <Box mb={2}>\r\n          <Typography variant=\"body2\">üîê Nh·∫≠p m·∫≠t kh·∫©u ƒë·ªÉ gi·∫£i RSA key:</Typography>\r\n          <Box display=\"flex\" gap={1} mt={1}>\r\n            <TextField\r\n              type=\"password\"\r\n              size=\"small\"\r\n              placeholder=\"M·∫≠t kh·∫©u\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button variant=\"outlined\" onClick={handleLoadPrivateKey}>\r\n              Gi·∫£i m√£\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Danh s√°ch tin nh·∫Øn */}\r\n      <List dense sx={{ maxHeight: 300, overflow: \"auto\", bgcolor: \"#f0f0f0\", mb: 2 }}>\r\n        {decryptedMessages.map((msg, i) => (\r\n          <ListItem key={i}>\r\n            <ListItemText\r\n              primary={getUsername(msg.senderId, msg)}\r\n              secondary={msg.decryptedContent}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      {/* Nh·∫≠p v√† g·ª≠i tin */}\r\n      <Box display=\"flex\" gap={1}>\r\n        <TextField\r\n          fullWidth\r\n          placeholder=\"Nh·∫≠p tin nh·∫Øn...\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <IconButton onClick={handleSend} color=\"primary\">\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}